#1. Specify the minimum version of cmake
cmake_minimum_required(VERSION 3.8)
if(COMMAND cmake_policy)
    cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)

#2. Specify the project name
PROJECT(h10w_controller_test)

#3. Specify the C++17_STANDARD
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

#4. Containing h1_sdk_base cmake configuration
set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}"
    "${CMAKE_CURRENT_SOURCE_DIR}/Environment/base"
)
include(h1_sdk_base)

set(THIRDPART_DIR ${CMAKE_CURRENT_LIST_DIR}/thirdparty)

find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(controller REQUIRED)

find_package(absl REQUIRED PATHS "${THIRDPART_DIR}/grpc/lib/cmake/absl" NO_DEFAULT_PATH)
find_package(utf8_range REQUIRED PATHS "${THIRDPART_DIR}/grpc/lib/cmake/utf8_range" NO_DEFAULT_PATH)
find_package(Protobuf REQUIRED PATHS "${THIRDPART_DIR}/grpc/lib/cmake/protobuf" NO_DEFAULT_PATH)
find_package(gRPC REQUIRED PATHS "${THIRDPART_DIR}/grpc/lib/cmake/grpc" NO_DEFAULT_PATH)
set(GRPC_LIB gRPC::grpc++_reflection gRPC::grpc++ protobuf::libprotobuf)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  set(ament_cmake_copyright_FOUND TRUE)
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

# 定义公共依赖集合
set(COMMON_DEPS
  rclcpp
  controller
)


# #7.Specify the head file directories
include_directories(
    ${TEST_BASE_INCLUDE_DIRECTORIES}
    ${THIRDPART_DIR}/grpc/include
    ${CMAKE_CURRENT_SOURCE_DIR}/include_H10w
    ${CMAKE_CURRENT_SOURCE_DIR}/include_H10w/part_test
    ${CMAKE_CURRENT_SOURCE_DIR}/include_H10w/grpc_msg/grpc_ws/monitor/
    ${CMAKE_CURRENT_SOURCE_DIR}/include_H10w/grpc_msg/grpc_ws/common/
    ${CMAKE_CURRENT_SOURCE_DIR}/include_H10w/grpc_msg/fastdds_ws/src/controller/
    ${CMAKE_CURRENT_SOURCE_DIR}/include_H10w/rpc_service
)

if(CMAKE_COMPILER_IS_GNUCXX)
    add_compile_options(-fPIC)
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--no-as-needed")
endif()

#8. Specify the test source file
# file(GLOB_RECURSE Base_Monitor ${CMAKE_CURRENT_SOURCE_DIR}/src/SaftMonitor/H10w/*)
file(GLOB_RECURSE Test_SRC ${CMAKE_CURRENT_SOURCE_DIR}/src/H10W/grpc/*/*.cpp)
# file(GLOB Base_Monitor ${CMAKE_CURRENT_SOURCE_DIR}/src/H10W/ros2/service/Speed_Monitor/ELEVATOR/*.cpp)
# file(GLOB Base_Monitor ${CMAKE_CURRENT_SOURCE_DIR}/src/SaftMonitor/H10W/ros2/topic/Speed_Monitor/ELEVATOR/*)
#9. Source file generated by the fastddsgen tool
file(GLOB_RECURSE H10w_SRC ${CMAKE_CURRENT_SOURCE_DIR}/include_H10w/*)

#11. Define the source file list variable
set(H1_SDK_SRC
    ${TEST_BASE_SRC}
    ${H10w_SRC}
    ${Test_SRC}
    ${Base_Monitor}
)

# #12. ouput executable
generate_h1_app(${H1_SDK_SRC})

# #13. install executable
install_h1_app()

ament_package()