// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Service.proto
// Protobuf C++ Version: 5.29.0

#ifndef Service_2eproto_2epb_2eh
#define Service_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Service_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Service_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Service_2eproto;
namespace H10WService {
class BrakeControlRequest;
struct BrakeControlRequestDefaultTypeInternal;
extern BrakeControlRequestDefaultTypeInternal _BrakeControlRequest_default_instance_;
class BrakeControlResponse;
struct BrakeControlResponseDefaultTypeInternal;
extern BrakeControlResponseDefaultTypeInternal _BrakeControlResponse_default_instance_;
class CalibrationRequest;
struct CalibrationRequestDefaultTypeInternal;
extern CalibrationRequestDefaultTypeInternal _CalibrationRequest_default_instance_;
class CalibrationResponse;
struct CalibrationResponseDefaultTypeInternal;
extern CalibrationResponseDefaultTypeInternal _CalibrationResponse_default_instance_;
class ClearErrorRequest;
struct ClearErrorRequestDefaultTypeInternal;
extern ClearErrorRequestDefaultTypeInternal _ClearErrorRequest_default_instance_;
class ClearErrorResponse;
struct ClearErrorResponseDefaultTypeInternal;
extern ClearErrorResponseDefaultTypeInternal _ClearErrorResponse_default_instance_;
class GetErrorCodeRequest;
struct GetErrorCodeRequestDefaultTypeInternal;
extern GetErrorCodeRequestDefaultTypeInternal _GetErrorCodeRequest_default_instance_;
class GetErrorCodeResponse;
struct GetErrorCodeResponseDefaultTypeInternal;
extern GetErrorCodeResponseDefaultTypeInternal _GetErrorCodeResponse_default_instance_;
class GetJointHardLimitRequest;
struct GetJointHardLimitRequestDefaultTypeInternal;
extern GetJointHardLimitRequestDefaultTypeInternal _GetJointHardLimitRequest_default_instance_;
class GetJointHardLimitResponse;
struct GetJointHardLimitResponseDefaultTypeInternal;
extern GetJointHardLimitResponseDefaultTypeInternal _GetJointHardLimitResponse_default_instance_;
class GetJointSoftLimitRequest;
struct GetJointSoftLimitRequestDefaultTypeInternal;
extern GetJointSoftLimitRequestDefaultTypeInternal _GetJointSoftLimitRequest_default_instance_;
class GetJointSoftLimitResponse;
struct GetJointSoftLimitResponseDefaultTypeInternal;
extern GetJointSoftLimitResponseDefaultTypeInternal _GetJointSoftLimitResponse_default_instance_;
class PowerControlRequest;
struct PowerControlRequestDefaultTypeInternal;
extern PowerControlRequestDefaultTypeInternal _PowerControlRequest_default_instance_;
class PowerControlResponse;
struct PowerControlResponseDefaultTypeInternal;
extern PowerControlResponseDefaultTypeInternal _PowerControlResponse_default_instance_;
class SaveParameterRequest;
struct SaveParameterRequestDefaultTypeInternal;
extern SaveParameterRequestDefaultTypeInternal _SaveParameterRequest_default_instance_;
class SaveParameterResponse;
struct SaveParameterResponseDefaultTypeInternal;
extern SaveParameterResponseDefaultTypeInternal _SaveParameterResponse_default_instance_;
class SetJointSoftLimitRequest;
struct SetJointSoftLimitRequestDefaultTypeInternal;
extern SetJointSoftLimitRequestDefaultTypeInternal _SetJointSoftLimitRequest_default_instance_;
class SetJointSoftLimitResponse;
struct SetJointSoftLimitResponseDefaultTypeInternal;
extern SetJointSoftLimitResponseDefaultTypeInternal _SetJointSoftLimitResponse_default_instance_;
class TorqueOffSetRequest;
struct TorqueOffSetRequestDefaultTypeInternal;
extern TorqueOffSetRequestDefaultTypeInternal _TorqueOffSetRequest_default_instance_;
class TorqueOffSetResponse;
struct TorqueOffSetResponseDefaultTypeInternal;
extern TorqueOffSetResponseDefaultTypeInternal _TorqueOffSetResponse_default_instance_;
}  // namespace H10WService
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace H10WService {
enum BrakeControlRequest_BRAKE_STATE : int {
  BrakeControlRequest_BRAKE_STATE_BRAKE_OFF = 0,
  BrakeControlRequest_BRAKE_STATE_BRAKE_ON = 1,
  BrakeControlRequest_BRAKE_STATE_BrakeControlRequest_BRAKE_STATE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BrakeControlRequest_BRAKE_STATE_BrakeControlRequest_BRAKE_STATE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BrakeControlRequest_BRAKE_STATE_IsValid(int value);
extern const uint32_t BrakeControlRequest_BRAKE_STATE_internal_data_[];
constexpr BrakeControlRequest_BRAKE_STATE BrakeControlRequest_BRAKE_STATE_BRAKE_STATE_MIN = static_cast<BrakeControlRequest_BRAKE_STATE>(0);
constexpr BrakeControlRequest_BRAKE_STATE BrakeControlRequest_BRAKE_STATE_BRAKE_STATE_MAX = static_cast<BrakeControlRequest_BRAKE_STATE>(1);
constexpr int BrakeControlRequest_BRAKE_STATE_BRAKE_STATE_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
BrakeControlRequest_BRAKE_STATE_descriptor();
template <typename T>
const std::string& BrakeControlRequest_BRAKE_STATE_Name(T value) {
  static_assert(std::is_same<T, BrakeControlRequest_BRAKE_STATE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BRAKE_STATE_Name().");
  return BrakeControlRequest_BRAKE_STATE_Name(static_cast<BrakeControlRequest_BRAKE_STATE>(value));
}
template <>
inline const std::string& BrakeControlRequest_BRAKE_STATE_Name(BrakeControlRequest_BRAKE_STATE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BrakeControlRequest_BRAKE_STATE_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool BrakeControlRequest_BRAKE_STATE_Parse(absl::string_view name, BrakeControlRequest_BRAKE_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrakeControlRequest_BRAKE_STATE>(
      BrakeControlRequest_BRAKE_STATE_descriptor(), name, value);
}
enum PowerControlRequest_POWER_STATE : int {
  PowerControlRequest_POWER_STATE_POWER_ON = 0,
  PowerControlRequest_POWER_STATE_POWER_OFF = 1,
  PowerControlRequest_POWER_STATE_PowerControlRequest_POWER_STATE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PowerControlRequest_POWER_STATE_PowerControlRequest_POWER_STATE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PowerControlRequest_POWER_STATE_IsValid(int value);
extern const uint32_t PowerControlRequest_POWER_STATE_internal_data_[];
constexpr PowerControlRequest_POWER_STATE PowerControlRequest_POWER_STATE_POWER_STATE_MIN = static_cast<PowerControlRequest_POWER_STATE>(0);
constexpr PowerControlRequest_POWER_STATE PowerControlRequest_POWER_STATE_POWER_STATE_MAX = static_cast<PowerControlRequest_POWER_STATE>(1);
constexpr int PowerControlRequest_POWER_STATE_POWER_STATE_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
PowerControlRequest_POWER_STATE_descriptor();
template <typename T>
const std::string& PowerControlRequest_POWER_STATE_Name(T value) {
  static_assert(std::is_same<T, PowerControlRequest_POWER_STATE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to POWER_STATE_Name().");
  return PowerControlRequest_POWER_STATE_Name(static_cast<PowerControlRequest_POWER_STATE>(value));
}
template <>
inline const std::string& PowerControlRequest_POWER_STATE_Name(PowerControlRequest_POWER_STATE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PowerControlRequest_POWER_STATE_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool PowerControlRequest_POWER_STATE_Parse(absl::string_view name, PowerControlRequest_POWER_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PowerControlRequest_POWER_STATE>(
      PowerControlRequest_POWER_STATE_descriptor(), name, value);
}
enum PART_INDEX : int {
  PART_INDEX_UNKNOWN = 0,
  HEAD_INDEX = 2,
  LEFT_ARM_INDEX = 6,
  RIGHT_ARM_INDEX = 7,
  PART_INDEX_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PART_INDEX_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PART_INDEX_IsValid(int value);
extern const uint32_t PART_INDEX_internal_data_[];
constexpr PART_INDEX PART_INDEX_MIN = static_cast<PART_INDEX>(0);
constexpr PART_INDEX PART_INDEX_MAX = static_cast<PART_INDEX>(7);
constexpr int PART_INDEX_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
PART_INDEX_descriptor();
template <typename T>
const std::string& PART_INDEX_Name(T value) {
  static_assert(std::is_same<T, PART_INDEX>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PART_INDEX_Name().");
  return PART_INDEX_Name(static_cast<PART_INDEX>(value));
}
template <>
inline const std::string& PART_INDEX_Name(PART_INDEX value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PART_INDEX_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool PART_INDEX_Parse(absl::string_view name, PART_INDEX* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PART_INDEX>(
      PART_INDEX_descriptor(), name, value);
}
enum JOINT_INDEX : int {
  JOINT_INDEX_UNKNOWN = 0,
  L_ARM_JOINT1 = 1,
  L_ARM_JOINT2 = 2,
  L_ARM_JOINT3 = 3,
  L_ARM_JOINT4 = 4,
  L_ARM_JOINT5 = 5,
  L_ARM_JOINT6 = 6,
  L_ARM_JOINT7 = 7,
  R_ARM_JOINT1 = 8,
  R_ARM_JOINT2 = 9,
  R_ARM_JOINT3 = 10,
  R_ARM_JOINT4 = 11,
  R_ARM_JOINT5 = 12,
  R_ARM_JOINT6 = 13,
  R_ARM_JOINT7 = 14,
  HEAD_PITCH = 15,
  HEAD_YAW = 16,
  ELEVATOR_MOTOR = 17,
  L_GRIPPER_MOTOR = 18,
  R_GRIPPER_MOTOR = 19,
  JOINT_INDEX_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  JOINT_INDEX_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool JOINT_INDEX_IsValid(int value);
extern const uint32_t JOINT_INDEX_internal_data_[];
constexpr JOINT_INDEX JOINT_INDEX_MIN = static_cast<JOINT_INDEX>(0);
constexpr JOINT_INDEX JOINT_INDEX_MAX = static_cast<JOINT_INDEX>(19);
constexpr int JOINT_INDEX_ARRAYSIZE = 19 + 1;
const ::google::protobuf::EnumDescriptor*
JOINT_INDEX_descriptor();
template <typename T>
const std::string& JOINT_INDEX_Name(T value) {
  static_assert(std::is_same<T, JOINT_INDEX>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to JOINT_INDEX_Name().");
  return JOINT_INDEX_Name(static_cast<JOINT_INDEX>(value));
}
template <>
inline const std::string& JOINT_INDEX_Name(JOINT_INDEX value) {
  return ::google::protobuf::internal::NameOfDenseEnum<JOINT_INDEX_descriptor,
                                                 0, 19>(
      static_cast<int>(value));
}
inline bool JOINT_INDEX_Parse(absl::string_view name, JOINT_INDEX* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOINT_INDEX>(
      JOINT_INDEX_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TorqueOffSetResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.TorqueOffSetResponse) */ {
 public:
  inline TorqueOffSetResponse() : TorqueOffSetResponse(nullptr) {}
  ~TorqueOffSetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TorqueOffSetResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TorqueOffSetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TorqueOffSetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TorqueOffSetResponse(const TorqueOffSetResponse& from) : TorqueOffSetResponse(nullptr, from) {}
  inline TorqueOffSetResponse(TorqueOffSetResponse&& from) noexcept
      : TorqueOffSetResponse(nullptr, std::move(from)) {}
  inline TorqueOffSetResponse& operator=(const TorqueOffSetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TorqueOffSetResponse& operator=(TorqueOffSetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TorqueOffSetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TorqueOffSetResponse* internal_default_instance() {
    return reinterpret_cast<const TorqueOffSetResponse*>(
        &_TorqueOffSetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(TorqueOffSetResponse& a, TorqueOffSetResponse& b) { a.Swap(&b); }
  inline void Swap(TorqueOffSetResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TorqueOffSetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TorqueOffSetResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TorqueOffSetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TorqueOffSetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TorqueOffSetResponse& from) { TorqueOffSetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TorqueOffSetResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.TorqueOffSetResponse"; }

 protected:
  explicit TorqueOffSetResponse(::google::protobuf::Arena* arena);
  TorqueOffSetResponse(::google::protobuf::Arena* arena, const TorqueOffSetResponse& from);
  TorqueOffSetResponse(::google::protobuf::Arena* arena, TorqueOffSetResponse&& from) noexcept
      : TorqueOffSetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAChannelOffsetFieldNumber = 3,
    kBChannelOffsetFieldNumber = 4,
    kErrorCodeFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // repeated float a_channel_offset = 3;
  int a_channel_offset_size() const;
  private:
  int _internal_a_channel_offset_size() const;

  public:
  void clear_a_channel_offset() ;
  float a_channel_offset(int index) const;
  void set_a_channel_offset(int index, float value);
  void add_a_channel_offset(float value);
  const ::google::protobuf::RepeatedField<float>& a_channel_offset() const;
  ::google::protobuf::RepeatedField<float>* mutable_a_channel_offset();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_a_channel_offset() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_a_channel_offset();

  public:
  // repeated float b_channel_offset = 4;
  int b_channel_offset_size() const;
  private:
  int _internal_b_channel_offset_size() const;

  public:
  void clear_b_channel_offset() ;
  float b_channel_offset(int index) const;
  void set_b_channel_offset(int index, float value);
  void add_b_channel_offset(float value);
  const ::google::protobuf::RepeatedField<float>& b_channel_offset() const;
  ::google::protobuf::RepeatedField<float>* mutable_b_channel_offset();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_b_channel_offset() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_b_channel_offset();

  public:
  // string error_code = 2;
  void clear_error_code() ;
  const std::string& error_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_code(Arg_&& arg, Args_... args);
  std::string* mutable_error_code();
  PROTOBUF_NODISCARD std::string* release_error_code();
  void set_allocated_error_code(std::string* value);

  private:
  const std::string& _internal_error_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_code(
      const std::string& value);
  std::string* _internal_mutable_error_code();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.TorqueOffSetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TorqueOffSetResponse& from_msg);
    ::google::protobuf::RepeatedField<float> a_channel_offset_;
    ::google::protobuf::RepeatedField<float> b_channel_offset_;
    ::google::protobuf::internal::ArenaStringPtr error_code_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class TorqueOffSetRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.TorqueOffSetRequest) */ {
 public:
  inline TorqueOffSetRequest() : TorqueOffSetRequest(nullptr) {}
  ~TorqueOffSetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TorqueOffSetRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TorqueOffSetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TorqueOffSetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TorqueOffSetRequest(const TorqueOffSetRequest& from) : TorqueOffSetRequest(nullptr, from) {}
  inline TorqueOffSetRequest(TorqueOffSetRequest&& from) noexcept
      : TorqueOffSetRequest(nullptr, std::move(from)) {}
  inline TorqueOffSetRequest& operator=(const TorqueOffSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TorqueOffSetRequest& operator=(TorqueOffSetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TorqueOffSetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TorqueOffSetRequest* internal_default_instance() {
    return reinterpret_cast<const TorqueOffSetRequest*>(
        &_TorqueOffSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(TorqueOffSetRequest& a, TorqueOffSetRequest& b) { a.Swap(&b); }
  inline void Swap(TorqueOffSetRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TorqueOffSetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TorqueOffSetRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TorqueOffSetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TorqueOffSetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TorqueOffSetRequest& from) { TorqueOffSetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TorqueOffSetRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.TorqueOffSetRequest"; }

 protected:
  explicit TorqueOffSetRequest(::google::protobuf::Arena* arena);
  TorqueOffSetRequest(::google::protobuf::Arena* arena, const TorqueOffSetRequest& from);
  TorqueOffSetRequest(::google::protobuf::Arena* arena, TorqueOffSetRequest&& from) noexcept
      : TorqueOffSetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPartIndexFieldNumber = 1,
  };
  // .H10WService.PART_INDEX part_index = 1;
  void clear_part_index() ;
  ::H10WService::PART_INDEX part_index() const;
  void set_part_index(::H10WService::PART_INDEX value);

  private:
  ::H10WService::PART_INDEX _internal_part_index() const;
  void _internal_set_part_index(::H10WService::PART_INDEX value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.TorqueOffSetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TorqueOffSetRequest& from_msg);
    int part_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class SetJointSoftLimitResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.SetJointSoftLimitResponse) */ {
 public:
  inline SetJointSoftLimitResponse() : SetJointSoftLimitResponse(nullptr) {}
  ~SetJointSoftLimitResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetJointSoftLimitResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetJointSoftLimitResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetJointSoftLimitResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetJointSoftLimitResponse(const SetJointSoftLimitResponse& from) : SetJointSoftLimitResponse(nullptr, from) {}
  inline SetJointSoftLimitResponse(SetJointSoftLimitResponse&& from) noexcept
      : SetJointSoftLimitResponse(nullptr, std::move(from)) {}
  inline SetJointSoftLimitResponse& operator=(const SetJointSoftLimitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetJointSoftLimitResponse& operator=(SetJointSoftLimitResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetJointSoftLimitResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetJointSoftLimitResponse* internal_default_instance() {
    return reinterpret_cast<const SetJointSoftLimitResponse*>(
        &_SetJointSoftLimitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SetJointSoftLimitResponse& a, SetJointSoftLimitResponse& b) { a.Swap(&b); }
  inline void Swap(SetJointSoftLimitResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetJointSoftLimitResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetJointSoftLimitResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetJointSoftLimitResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetJointSoftLimitResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetJointSoftLimitResponse& from) { SetJointSoftLimitResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetJointSoftLimitResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.SetJointSoftLimitResponse"; }

 protected:
  explicit SetJointSoftLimitResponse(::google::protobuf::Arena* arena);
  SetJointSoftLimitResponse(::google::protobuf::Arena* arena, const SetJointSoftLimitResponse& from);
  SetJointSoftLimitResponse(::google::protobuf::Arena* arena, SetJointSoftLimitResponse&& from) noexcept
      : SetJointSoftLimitResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.SetJointSoftLimitResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetJointSoftLimitResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class SetJointSoftLimitRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.SetJointSoftLimitRequest) */ {
 public:
  inline SetJointSoftLimitRequest() : SetJointSoftLimitRequest(nullptr) {}
  ~SetJointSoftLimitRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetJointSoftLimitRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetJointSoftLimitRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetJointSoftLimitRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetJointSoftLimitRequest(const SetJointSoftLimitRequest& from) : SetJointSoftLimitRequest(nullptr, from) {}
  inline SetJointSoftLimitRequest(SetJointSoftLimitRequest&& from) noexcept
      : SetJointSoftLimitRequest(nullptr, std::move(from)) {}
  inline SetJointSoftLimitRequest& operator=(const SetJointSoftLimitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetJointSoftLimitRequest& operator=(SetJointSoftLimitRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetJointSoftLimitRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetJointSoftLimitRequest* internal_default_instance() {
    return reinterpret_cast<const SetJointSoftLimitRequest*>(
        &_SetJointSoftLimitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SetJointSoftLimitRequest& a, SetJointSoftLimitRequest& b) { a.Swap(&b); }
  inline void Swap(SetJointSoftLimitRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetJointSoftLimitRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetJointSoftLimitRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetJointSoftLimitRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetJointSoftLimitRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetJointSoftLimitRequest& from) { SetJointSoftLimitRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetJointSoftLimitRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.SetJointSoftLimitRequest"; }

 protected:
  explicit SetJointSoftLimitRequest(::google::protobuf::Arena* arena);
  SetJointSoftLimitRequest(::google::protobuf::Arena* arena, const SetJointSoftLimitRequest& from);
  SetJointSoftLimitRequest(::google::protobuf::Arena* arena, SetJointSoftLimitRequest&& from) noexcept
      : SetJointSoftLimitRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kJointIndexFieldNumber = 1,
    kMinPositionFieldNumber = 2,
    kMaxPositionFieldNumber = 3,
  };
  // repeated .H10WService.JOINT_INDEX joint_index = 1;
  int joint_index_size() const;
  private:
  int _internal_joint_index_size() const;

  public:
  void clear_joint_index() ;
  public:
  ::H10WService::JOINT_INDEX joint_index(int index) const;
  void set_joint_index(int index, ::H10WService::JOINT_INDEX value);
  void add_joint_index(::H10WService::JOINT_INDEX value);
  const ::google::protobuf::RepeatedField<int>& joint_index() const;
  ::google::protobuf::RepeatedField<int>* mutable_joint_index();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_joint_index() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_joint_index();

  public:
  // repeated double min_position = 2;
  int min_position_size() const;
  private:
  int _internal_min_position_size() const;

  public:
  void clear_min_position() ;
  double min_position(int index) const;
  void set_min_position(int index, double value);
  void add_min_position(double value);
  const ::google::protobuf::RepeatedField<double>& min_position() const;
  ::google::protobuf::RepeatedField<double>* mutable_min_position();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_min_position() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_min_position();

  public:
  // repeated double max_position = 3;
  int max_position_size() const;
  private:
  int _internal_max_position_size() const;

  public:
  void clear_max_position() ;
  double max_position(int index) const;
  void set_max_position(int index, double value);
  void add_max_position(double value);
  const ::google::protobuf::RepeatedField<double>& max_position() const;
  ::google::protobuf::RepeatedField<double>* mutable_max_position();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_max_position() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_max_position();

  public:
  // @@protoc_insertion_point(class_scope:H10WService.SetJointSoftLimitRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetJointSoftLimitRequest& from_msg);
    ::google::protobuf::RepeatedField<int> joint_index_;
    ::google::protobuf::internal::CachedSize _joint_index_cached_byte_size_;
    ::google::protobuf::RepeatedField<double> min_position_;
    ::google::protobuf::RepeatedField<double> max_position_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class SaveParameterResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.SaveParameterResponse) */ {
 public:
  inline SaveParameterResponse() : SaveParameterResponse(nullptr) {}
  ~SaveParameterResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SaveParameterResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SaveParameterResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaveParameterResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaveParameterResponse(const SaveParameterResponse& from) : SaveParameterResponse(nullptr, from) {}
  inline SaveParameterResponse(SaveParameterResponse&& from) noexcept
      : SaveParameterResponse(nullptr, std::move(from)) {}
  inline SaveParameterResponse& operator=(const SaveParameterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveParameterResponse& operator=(SaveParameterResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaveParameterResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaveParameterResponse* internal_default_instance() {
    return reinterpret_cast<const SaveParameterResponse*>(
        &_SaveParameterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SaveParameterResponse& a, SaveParameterResponse& b) { a.Swap(&b); }
  inline void Swap(SaveParameterResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaveParameterResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaveParameterResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SaveParameterResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaveParameterResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SaveParameterResponse& from) { SaveParameterResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SaveParameterResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.SaveParameterResponse"; }

 protected:
  explicit SaveParameterResponse(::google::protobuf::Arena* arena);
  SaveParameterResponse(::google::protobuf::Arena* arena, const SaveParameterResponse& from);
  SaveParameterResponse(::google::protobuf::Arena* arena, SaveParameterResponse&& from) noexcept
      : SaveParameterResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.SaveParameterResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaveParameterResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class SaveParameterRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.SaveParameterRequest) */ {
 public:
  inline SaveParameterRequest() : SaveParameterRequest(nullptr) {}
  ~SaveParameterRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SaveParameterRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SaveParameterRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaveParameterRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaveParameterRequest(const SaveParameterRequest& from) : SaveParameterRequest(nullptr, from) {}
  inline SaveParameterRequest(SaveParameterRequest&& from) noexcept
      : SaveParameterRequest(nullptr, std::move(from)) {}
  inline SaveParameterRequest& operator=(const SaveParameterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveParameterRequest& operator=(SaveParameterRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaveParameterRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaveParameterRequest* internal_default_instance() {
    return reinterpret_cast<const SaveParameterRequest*>(
        &_SaveParameterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SaveParameterRequest& a, SaveParameterRequest& b) { a.Swap(&b); }
  inline void Swap(SaveParameterRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaveParameterRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaveParameterRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SaveParameterRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaveParameterRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SaveParameterRequest& from) { SaveParameterRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SaveParameterRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.SaveParameterRequest"; }

 protected:
  explicit SaveParameterRequest(::google::protobuf::Arena* arena);
  SaveParameterRequest(::google::protobuf::Arena* arena, const SaveParameterRequest& from);
  SaveParameterRequest(::google::protobuf::Arena* arena, SaveParameterRequest&& from) noexcept
      : SaveParameterRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kJointIndexFieldNumber = 1,
  };
  // .H10WService.JOINT_INDEX joint_index = 1;
  void clear_joint_index() ;
  ::H10WService::JOINT_INDEX joint_index() const;
  void set_joint_index(::H10WService::JOINT_INDEX value);

  private:
  ::H10WService::JOINT_INDEX _internal_joint_index() const;
  void _internal_set_joint_index(::H10WService::JOINT_INDEX value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.SaveParameterRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaveParameterRequest& from_msg);
    int joint_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class PowerControlResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.PowerControlResponse) */ {
 public:
  inline PowerControlResponse() : PowerControlResponse(nullptr) {}
  ~PowerControlResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PowerControlResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PowerControlResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PowerControlResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PowerControlResponse(const PowerControlResponse& from) : PowerControlResponse(nullptr, from) {}
  inline PowerControlResponse(PowerControlResponse&& from) noexcept
      : PowerControlResponse(nullptr, std::move(from)) {}
  inline PowerControlResponse& operator=(const PowerControlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerControlResponse& operator=(PowerControlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PowerControlResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PowerControlResponse* internal_default_instance() {
    return reinterpret_cast<const PowerControlResponse*>(
        &_PowerControlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PowerControlResponse& a, PowerControlResponse& b) { a.Swap(&b); }
  inline void Swap(PowerControlResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PowerControlResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PowerControlResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PowerControlResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PowerControlResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PowerControlResponse& from) { PowerControlResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PowerControlResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.PowerControlResponse"; }

 protected:
  explicit PowerControlResponse(::google::protobuf::Arena* arena);
  PowerControlResponse(::google::protobuf::Arena* arena, const PowerControlResponse& from);
  PowerControlResponse(::google::protobuf::Arena* arena, PowerControlResponse&& from) noexcept
      : PowerControlResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorCodeFieldNumber = 2,
    kErrorMessageFieldNumber = 3,
    kSuccessFieldNumber = 1,
  };
  // string error_code = 2;
  void clear_error_code() ;
  const std::string& error_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_code(Arg_&& arg, Args_... args);
  std::string* mutable_error_code();
  PROTOBUF_NODISCARD std::string* release_error_code();
  void set_allocated_error_code(std::string* value);

  private:
  const std::string& _internal_error_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_code(
      const std::string& value);
  std::string* _internal_mutable_error_code();

  public:
  // string error_message = 3;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.PowerControlResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PowerControlResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr error_code_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class PowerControlRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.PowerControlRequest) */ {
 public:
  inline PowerControlRequest() : PowerControlRequest(nullptr) {}
  ~PowerControlRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PowerControlRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PowerControlRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PowerControlRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PowerControlRequest(const PowerControlRequest& from) : PowerControlRequest(nullptr, from) {}
  inline PowerControlRequest(PowerControlRequest&& from) noexcept
      : PowerControlRequest(nullptr, std::move(from)) {}
  inline PowerControlRequest& operator=(const PowerControlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerControlRequest& operator=(PowerControlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PowerControlRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PowerControlRequest* internal_default_instance() {
    return reinterpret_cast<const PowerControlRequest*>(
        &_PowerControlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PowerControlRequest& a, PowerControlRequest& b) { a.Swap(&b); }
  inline void Swap(PowerControlRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PowerControlRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PowerControlRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PowerControlRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PowerControlRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PowerControlRequest& from) { PowerControlRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PowerControlRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.PowerControlRequest"; }

 protected:
  explicit PowerControlRequest(::google::protobuf::Arena* arena);
  PowerControlRequest(::google::protobuf::Arena* arena, const PowerControlRequest& from);
  PowerControlRequest(::google::protobuf::Arena* arena, PowerControlRequest&& from) noexcept
      : PowerControlRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using POWER_STATE = PowerControlRequest_POWER_STATE;
  static constexpr POWER_STATE POWER_ON = PowerControlRequest_POWER_STATE_POWER_ON;
  static constexpr POWER_STATE POWER_OFF = PowerControlRequest_POWER_STATE_POWER_OFF;
  static inline bool POWER_STATE_IsValid(int value) {
    return PowerControlRequest_POWER_STATE_IsValid(value);
  }
  static constexpr POWER_STATE POWER_STATE_MIN = PowerControlRequest_POWER_STATE_POWER_STATE_MIN;
  static constexpr POWER_STATE POWER_STATE_MAX = PowerControlRequest_POWER_STATE_POWER_STATE_MAX;
  static constexpr int POWER_STATE_ARRAYSIZE = PowerControlRequest_POWER_STATE_POWER_STATE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* POWER_STATE_descriptor() {
    return PowerControlRequest_POWER_STATE_descriptor();
  }
  template <typename T>
  static inline const std::string& POWER_STATE_Name(T value) {
    return PowerControlRequest_POWER_STATE_Name(value);
  }
  static inline bool POWER_STATE_Parse(absl::string_view name, POWER_STATE* value) {
    return PowerControlRequest_POWER_STATE_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRequestStateFieldNumber = 1,
  };
  // .H10WService.PowerControlRequest.POWER_STATE request_state = 1;
  void clear_request_state() ;
  ::H10WService::PowerControlRequest_POWER_STATE request_state() const;
  void set_request_state(::H10WService::PowerControlRequest_POWER_STATE value);

  private:
  ::H10WService::PowerControlRequest_POWER_STATE _internal_request_state() const;
  void _internal_set_request_state(::H10WService::PowerControlRequest_POWER_STATE value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.PowerControlRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PowerControlRequest& from_msg);
    int request_state_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class GetJointSoftLimitResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.GetJointSoftLimitResponse) */ {
 public:
  inline GetJointSoftLimitResponse() : GetJointSoftLimitResponse(nullptr) {}
  ~GetJointSoftLimitResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetJointSoftLimitResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetJointSoftLimitResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetJointSoftLimitResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetJointSoftLimitResponse(const GetJointSoftLimitResponse& from) : GetJointSoftLimitResponse(nullptr, from) {}
  inline GetJointSoftLimitResponse(GetJointSoftLimitResponse&& from) noexcept
      : GetJointSoftLimitResponse(nullptr, std::move(from)) {}
  inline GetJointSoftLimitResponse& operator=(const GetJointSoftLimitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetJointSoftLimitResponse& operator=(GetJointSoftLimitResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetJointSoftLimitResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetJointSoftLimitResponse* internal_default_instance() {
    return reinterpret_cast<const GetJointSoftLimitResponse*>(
        &_GetJointSoftLimitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetJointSoftLimitResponse& a, GetJointSoftLimitResponse& b) { a.Swap(&b); }
  inline void Swap(GetJointSoftLimitResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetJointSoftLimitResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetJointSoftLimitResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetJointSoftLimitResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetJointSoftLimitResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetJointSoftLimitResponse& from) { GetJointSoftLimitResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetJointSoftLimitResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.GetJointSoftLimitResponse"; }

 protected:
  explicit GetJointSoftLimitResponse(::google::protobuf::Arena* arena);
  GetJointSoftLimitResponse(::google::protobuf::Arena* arena, const GetJointSoftLimitResponse& from);
  GetJointSoftLimitResponse(::google::protobuf::Arena* arena, GetJointSoftLimitResponse&& from) noexcept
      : GetJointSoftLimitResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinPositionFieldNumber = 2,
    kMaxPositionFieldNumber = 3,
  };
  // repeated double min_position = 2;
  int min_position_size() const;
  private:
  int _internal_min_position_size() const;

  public:
  void clear_min_position() ;
  double min_position(int index) const;
  void set_min_position(int index, double value);
  void add_min_position(double value);
  const ::google::protobuf::RepeatedField<double>& min_position() const;
  ::google::protobuf::RepeatedField<double>* mutable_min_position();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_min_position() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_min_position();

  public:
  // repeated double max_position = 3;
  int max_position_size() const;
  private:
  int _internal_max_position_size() const;

  public:
  void clear_max_position() ;
  double max_position(int index) const;
  void set_max_position(int index, double value);
  void add_max_position(double value);
  const ::google::protobuf::RepeatedField<double>& max_position() const;
  ::google::protobuf::RepeatedField<double>* mutable_max_position();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_max_position() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_max_position();

  public:
  // @@protoc_insertion_point(class_scope:H10WService.GetJointSoftLimitResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetJointSoftLimitResponse& from_msg);
    ::google::protobuf::RepeatedField<double> min_position_;
    ::google::protobuf::RepeatedField<double> max_position_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class GetJointSoftLimitRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.GetJointSoftLimitRequest) */ {
 public:
  inline GetJointSoftLimitRequest() : GetJointSoftLimitRequest(nullptr) {}
  ~GetJointSoftLimitRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetJointSoftLimitRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetJointSoftLimitRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetJointSoftLimitRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetJointSoftLimitRequest(const GetJointSoftLimitRequest& from) : GetJointSoftLimitRequest(nullptr, from) {}
  inline GetJointSoftLimitRequest(GetJointSoftLimitRequest&& from) noexcept
      : GetJointSoftLimitRequest(nullptr, std::move(from)) {}
  inline GetJointSoftLimitRequest& operator=(const GetJointSoftLimitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetJointSoftLimitRequest& operator=(GetJointSoftLimitRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetJointSoftLimitRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetJointSoftLimitRequest* internal_default_instance() {
    return reinterpret_cast<const GetJointSoftLimitRequest*>(
        &_GetJointSoftLimitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(GetJointSoftLimitRequest& a, GetJointSoftLimitRequest& b) { a.Swap(&b); }
  inline void Swap(GetJointSoftLimitRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetJointSoftLimitRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetJointSoftLimitRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetJointSoftLimitRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetJointSoftLimitRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetJointSoftLimitRequest& from) { GetJointSoftLimitRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetJointSoftLimitRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.GetJointSoftLimitRequest"; }

 protected:
  explicit GetJointSoftLimitRequest(::google::protobuf::Arena* arena);
  GetJointSoftLimitRequest(::google::protobuf::Arena* arena, const GetJointSoftLimitRequest& from);
  GetJointSoftLimitRequest(::google::protobuf::Arena* arena, GetJointSoftLimitRequest&& from) noexcept
      : GetJointSoftLimitRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kJointIndexFieldNumber = 1,
  };
  // repeated .H10WService.JOINT_INDEX joint_index = 1;
  int joint_index_size() const;
  private:
  int _internal_joint_index_size() const;

  public:
  void clear_joint_index() ;
  public:
  ::H10WService::JOINT_INDEX joint_index(int index) const;
  void set_joint_index(int index, ::H10WService::JOINT_INDEX value);
  void add_joint_index(::H10WService::JOINT_INDEX value);
  const ::google::protobuf::RepeatedField<int>& joint_index() const;
  ::google::protobuf::RepeatedField<int>* mutable_joint_index();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_joint_index() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_joint_index();

  public:
  // @@protoc_insertion_point(class_scope:H10WService.GetJointSoftLimitRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetJointSoftLimitRequest& from_msg);
    ::google::protobuf::RepeatedField<int> joint_index_;
    ::google::protobuf::internal::CachedSize _joint_index_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class GetJointHardLimitResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.GetJointHardLimitResponse) */ {
 public:
  inline GetJointHardLimitResponse() : GetJointHardLimitResponse(nullptr) {}
  ~GetJointHardLimitResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetJointHardLimitResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetJointHardLimitResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetJointHardLimitResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetJointHardLimitResponse(const GetJointHardLimitResponse& from) : GetJointHardLimitResponse(nullptr, from) {}
  inline GetJointHardLimitResponse(GetJointHardLimitResponse&& from) noexcept
      : GetJointHardLimitResponse(nullptr, std::move(from)) {}
  inline GetJointHardLimitResponse& operator=(const GetJointHardLimitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetJointHardLimitResponse& operator=(GetJointHardLimitResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetJointHardLimitResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetJointHardLimitResponse* internal_default_instance() {
    return reinterpret_cast<const GetJointHardLimitResponse*>(
        &_GetJointHardLimitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetJointHardLimitResponse& a, GetJointHardLimitResponse& b) { a.Swap(&b); }
  inline void Swap(GetJointHardLimitResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetJointHardLimitResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetJointHardLimitResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetJointHardLimitResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetJointHardLimitResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetJointHardLimitResponse& from) { GetJointHardLimitResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetJointHardLimitResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.GetJointHardLimitResponse"; }

 protected:
  explicit GetJointHardLimitResponse(::google::protobuf::Arena* arena);
  GetJointHardLimitResponse(::google::protobuf::Arena* arena, const GetJointHardLimitResponse& from);
  GetJointHardLimitResponse(::google::protobuf::Arena* arena, GetJointHardLimitResponse&& from) noexcept
      : GetJointHardLimitResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinPositionFieldNumber = 2,
    kMaxPositionFieldNumber = 3,
  };
  // repeated double min_position = 2;
  int min_position_size() const;
  private:
  int _internal_min_position_size() const;

  public:
  void clear_min_position() ;
  double min_position(int index) const;
  void set_min_position(int index, double value);
  void add_min_position(double value);
  const ::google::protobuf::RepeatedField<double>& min_position() const;
  ::google::protobuf::RepeatedField<double>* mutable_min_position();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_min_position() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_min_position();

  public:
  // repeated double max_position = 3;
  int max_position_size() const;
  private:
  int _internal_max_position_size() const;

  public:
  void clear_max_position() ;
  double max_position(int index) const;
  void set_max_position(int index, double value);
  void add_max_position(double value);
  const ::google::protobuf::RepeatedField<double>& max_position() const;
  ::google::protobuf::RepeatedField<double>* mutable_max_position();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_max_position() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_max_position();

  public:
  // @@protoc_insertion_point(class_scope:H10WService.GetJointHardLimitResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetJointHardLimitResponse& from_msg);
    ::google::protobuf::RepeatedField<double> min_position_;
    ::google::protobuf::RepeatedField<double> max_position_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class GetJointHardLimitRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.GetJointHardLimitRequest) */ {
 public:
  inline GetJointHardLimitRequest() : GetJointHardLimitRequest(nullptr) {}
  ~GetJointHardLimitRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetJointHardLimitRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetJointHardLimitRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetJointHardLimitRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetJointHardLimitRequest(const GetJointHardLimitRequest& from) : GetJointHardLimitRequest(nullptr, from) {}
  inline GetJointHardLimitRequest(GetJointHardLimitRequest&& from) noexcept
      : GetJointHardLimitRequest(nullptr, std::move(from)) {}
  inline GetJointHardLimitRequest& operator=(const GetJointHardLimitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetJointHardLimitRequest& operator=(GetJointHardLimitRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetJointHardLimitRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetJointHardLimitRequest* internal_default_instance() {
    return reinterpret_cast<const GetJointHardLimitRequest*>(
        &_GetJointHardLimitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetJointHardLimitRequest& a, GetJointHardLimitRequest& b) { a.Swap(&b); }
  inline void Swap(GetJointHardLimitRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetJointHardLimitRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetJointHardLimitRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetJointHardLimitRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetJointHardLimitRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetJointHardLimitRequest& from) { GetJointHardLimitRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetJointHardLimitRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.GetJointHardLimitRequest"; }

 protected:
  explicit GetJointHardLimitRequest(::google::protobuf::Arena* arena);
  GetJointHardLimitRequest(::google::protobuf::Arena* arena, const GetJointHardLimitRequest& from);
  GetJointHardLimitRequest(::google::protobuf::Arena* arena, GetJointHardLimitRequest&& from) noexcept
      : GetJointHardLimitRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kJointIndexFieldNumber = 1,
  };
  // repeated .H10WService.JOINT_INDEX joint_index = 1;
  int joint_index_size() const;
  private:
  int _internal_joint_index_size() const;

  public:
  void clear_joint_index() ;
  public:
  ::H10WService::JOINT_INDEX joint_index(int index) const;
  void set_joint_index(int index, ::H10WService::JOINT_INDEX value);
  void add_joint_index(::H10WService::JOINT_INDEX value);
  const ::google::protobuf::RepeatedField<int>& joint_index() const;
  ::google::protobuf::RepeatedField<int>* mutable_joint_index();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_joint_index() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_joint_index();

  public:
  // @@protoc_insertion_point(class_scope:H10WService.GetJointHardLimitRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetJointHardLimitRequest& from_msg);
    ::google::protobuf::RepeatedField<int> joint_index_;
    ::google::protobuf::internal::CachedSize _joint_index_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class GetErrorCodeResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.GetErrorCodeResponse) */ {
 public:
  inline GetErrorCodeResponse() : GetErrorCodeResponse(nullptr) {}
  ~GetErrorCodeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetErrorCodeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetErrorCodeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetErrorCodeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetErrorCodeResponse(const GetErrorCodeResponse& from) : GetErrorCodeResponse(nullptr, from) {}
  inline GetErrorCodeResponse(GetErrorCodeResponse&& from) noexcept
      : GetErrorCodeResponse(nullptr, std::move(from)) {}
  inline GetErrorCodeResponse& operator=(const GetErrorCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetErrorCodeResponse& operator=(GetErrorCodeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetErrorCodeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetErrorCodeResponse* internal_default_instance() {
    return reinterpret_cast<const GetErrorCodeResponse*>(
        &_GetErrorCodeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetErrorCodeResponse& a, GetErrorCodeResponse& b) { a.Swap(&b); }
  inline void Swap(GetErrorCodeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetErrorCodeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetErrorCodeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetErrorCodeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetErrorCodeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetErrorCodeResponse& from) { GetErrorCodeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetErrorCodeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.GetErrorCodeResponse"; }

 protected:
  explicit GetErrorCodeResponse(::google::protobuf::Arena* arena);
  GetErrorCodeResponse(::google::protobuf::Arena* arena, const GetErrorCodeResponse& from);
  GetErrorCodeResponse(::google::protobuf::Arena* arena, GetErrorCodeResponse&& from) noexcept
      : GetErrorCodeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kJointErrorCodeFieldNumber = 3,
    kErrorCodeFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // repeated uint32 joint_error_code = 3;
  int joint_error_code_size() const;
  private:
  int _internal_joint_error_code_size() const;

  public:
  void clear_joint_error_code() ;
  ::uint32_t joint_error_code(int index) const;
  void set_joint_error_code(int index, ::uint32_t value);
  void add_joint_error_code(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& joint_error_code() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_joint_error_code();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_joint_error_code() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_joint_error_code();

  public:
  // string error_code = 2;
  void clear_error_code() ;
  const std::string& error_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_code(Arg_&& arg, Args_... args);
  std::string* mutable_error_code();
  PROTOBUF_NODISCARD std::string* release_error_code();
  void set_allocated_error_code(std::string* value);

  private:
  const std::string& _internal_error_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_code(
      const std::string& value);
  std::string* _internal_mutable_error_code();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.GetErrorCodeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetErrorCodeResponse& from_msg);
    ::google::protobuf::RepeatedField<::uint32_t> joint_error_code_;
    ::google::protobuf::internal::CachedSize _joint_error_code_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr error_code_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class GetErrorCodeRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.GetErrorCodeRequest) */ {
 public:
  inline GetErrorCodeRequest() : GetErrorCodeRequest(nullptr) {}
  ~GetErrorCodeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetErrorCodeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetErrorCodeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetErrorCodeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetErrorCodeRequest(const GetErrorCodeRequest& from) : GetErrorCodeRequest(nullptr, from) {}
  inline GetErrorCodeRequest(GetErrorCodeRequest&& from) noexcept
      : GetErrorCodeRequest(nullptr, std::move(from)) {}
  inline GetErrorCodeRequest& operator=(const GetErrorCodeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetErrorCodeRequest& operator=(GetErrorCodeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetErrorCodeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetErrorCodeRequest* internal_default_instance() {
    return reinterpret_cast<const GetErrorCodeRequest*>(
        &_GetErrorCodeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetErrorCodeRequest& a, GetErrorCodeRequest& b) { a.Swap(&b); }
  inline void Swap(GetErrorCodeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetErrorCodeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetErrorCodeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetErrorCodeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetErrorCodeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetErrorCodeRequest& from) { GetErrorCodeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetErrorCodeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.GetErrorCodeRequest"; }

 protected:
  explicit GetErrorCodeRequest(::google::protobuf::Arena* arena);
  GetErrorCodeRequest(::google::protobuf::Arena* arena, const GetErrorCodeRequest& from);
  GetErrorCodeRequest(::google::protobuf::Arena* arena, GetErrorCodeRequest&& from) noexcept
      : GetErrorCodeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPartIndexFieldNumber = 1,
  };
  // .H10WService.PART_INDEX part_index = 1;
  void clear_part_index() ;
  ::H10WService::PART_INDEX part_index() const;
  void set_part_index(::H10WService::PART_INDEX value);

  private:
  ::H10WService::PART_INDEX _internal_part_index() const;
  void _internal_set_part_index(::H10WService::PART_INDEX value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.GetErrorCodeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetErrorCodeRequest& from_msg);
    int part_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class ClearErrorResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.ClearErrorResponse) */ {
 public:
  inline ClearErrorResponse() : ClearErrorResponse(nullptr) {}
  ~ClearErrorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClearErrorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClearErrorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClearErrorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClearErrorResponse(const ClearErrorResponse& from) : ClearErrorResponse(nullptr, from) {}
  inline ClearErrorResponse(ClearErrorResponse&& from) noexcept
      : ClearErrorResponse(nullptr, std::move(from)) {}
  inline ClearErrorResponse& operator=(const ClearErrorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearErrorResponse& operator=(ClearErrorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearErrorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClearErrorResponse* internal_default_instance() {
    return reinterpret_cast<const ClearErrorResponse*>(
        &_ClearErrorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ClearErrorResponse& a, ClearErrorResponse& b) { a.Swap(&b); }
  inline void Swap(ClearErrorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearErrorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearErrorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClearErrorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClearErrorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClearErrorResponse& from) { ClearErrorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClearErrorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.ClearErrorResponse"; }

 protected:
  explicit ClearErrorResponse(::google::protobuf::Arena* arena);
  ClearErrorResponse(::google::protobuf::Arena* arena, const ClearErrorResponse& from);
  ClearErrorResponse(::google::protobuf::Arena* arena, ClearErrorResponse&& from) noexcept
      : ClearErrorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.ClearErrorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClearErrorResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class ClearErrorRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.ClearErrorRequest) */ {
 public:
  inline ClearErrorRequest() : ClearErrorRequest(nullptr) {}
  ~ClearErrorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClearErrorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClearErrorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClearErrorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClearErrorRequest(const ClearErrorRequest& from) : ClearErrorRequest(nullptr, from) {}
  inline ClearErrorRequest(ClearErrorRequest&& from) noexcept
      : ClearErrorRequest(nullptr, std::move(from)) {}
  inline ClearErrorRequest& operator=(const ClearErrorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearErrorRequest& operator=(ClearErrorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearErrorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClearErrorRequest* internal_default_instance() {
    return reinterpret_cast<const ClearErrorRequest*>(
        &_ClearErrorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ClearErrorRequest& a, ClearErrorRequest& b) { a.Swap(&b); }
  inline void Swap(ClearErrorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearErrorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearErrorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClearErrorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClearErrorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClearErrorRequest& from) { ClearErrorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClearErrorRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.ClearErrorRequest"; }

 protected:
  explicit ClearErrorRequest(::google::protobuf::Arena* arena);
  ClearErrorRequest(::google::protobuf::Arena* arena, const ClearErrorRequest& from);
  ClearErrorRequest(::google::protobuf::Arena* arena, ClearErrorRequest&& from) noexcept
      : ClearErrorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kJointIndexFieldNumber = 1,
  };
  // .H10WService.JOINT_INDEX joint_index = 1;
  void clear_joint_index() ;
  ::H10WService::JOINT_INDEX joint_index() const;
  void set_joint_index(::H10WService::JOINT_INDEX value);

  private:
  ::H10WService::JOINT_INDEX _internal_joint_index() const;
  void _internal_set_joint_index(::H10WService::JOINT_INDEX value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.ClearErrorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClearErrorRequest& from_msg);
    int joint_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class CalibrationResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.CalibrationResponse) */ {
 public:
  inline CalibrationResponse() : CalibrationResponse(nullptr) {}
  ~CalibrationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CalibrationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CalibrationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CalibrationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CalibrationResponse(const CalibrationResponse& from) : CalibrationResponse(nullptr, from) {}
  inline CalibrationResponse(CalibrationResponse&& from) noexcept
      : CalibrationResponse(nullptr, std::move(from)) {}
  inline CalibrationResponse& operator=(const CalibrationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalibrationResponse& operator=(CalibrationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalibrationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalibrationResponse* internal_default_instance() {
    return reinterpret_cast<const CalibrationResponse*>(
        &_CalibrationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CalibrationResponse& a, CalibrationResponse& b) { a.Swap(&b); }
  inline void Swap(CalibrationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalibrationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalibrationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CalibrationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalibrationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CalibrationResponse& from) { CalibrationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CalibrationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.CalibrationResponse"; }

 protected:
  explicit CalibrationResponse(::google::protobuf::Arena* arena);
  CalibrationResponse(::google::protobuf::Arena* arena, const CalibrationResponse& from);
  CalibrationResponse(::google::protobuf::Arena* arena, CalibrationResponse&& from) noexcept
      : CalibrationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.CalibrationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CalibrationResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class CalibrationRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.CalibrationRequest) */ {
 public:
  inline CalibrationRequest() : CalibrationRequest(nullptr) {}
  ~CalibrationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CalibrationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CalibrationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CalibrationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CalibrationRequest(const CalibrationRequest& from) : CalibrationRequest(nullptr, from) {}
  inline CalibrationRequest(CalibrationRequest&& from) noexcept
      : CalibrationRequest(nullptr, std::move(from)) {}
  inline CalibrationRequest& operator=(const CalibrationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalibrationRequest& operator=(CalibrationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalibrationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalibrationRequest* internal_default_instance() {
    return reinterpret_cast<const CalibrationRequest*>(
        &_CalibrationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CalibrationRequest& a, CalibrationRequest& b) { a.Swap(&b); }
  inline void Swap(CalibrationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalibrationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalibrationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CalibrationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalibrationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CalibrationRequest& from) { CalibrationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CalibrationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.CalibrationRequest"; }

 protected:
  explicit CalibrationRequest(::google::protobuf::Arena* arena);
  CalibrationRequest(::google::protobuf::Arena* arena, const CalibrationRequest& from);
  CalibrationRequest(::google::protobuf::Arena* arena, CalibrationRequest&& from) noexcept
      : CalibrationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kJointIndexFieldNumber = 1,
  };
  // .H10WService.JOINT_INDEX joint_index = 1;
  void clear_joint_index() ;
  ::H10WService::JOINT_INDEX joint_index() const;
  void set_joint_index(::H10WService::JOINT_INDEX value);

  private:
  ::H10WService::JOINT_INDEX _internal_joint_index() const;
  void _internal_set_joint_index(::H10WService::JOINT_INDEX value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.CalibrationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CalibrationRequest& from_msg);
    int joint_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class BrakeControlResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.BrakeControlResponse) */ {
 public:
  inline BrakeControlResponse() : BrakeControlResponse(nullptr) {}
  ~BrakeControlResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BrakeControlResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BrakeControlResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BrakeControlResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BrakeControlResponse(const BrakeControlResponse& from) : BrakeControlResponse(nullptr, from) {}
  inline BrakeControlResponse(BrakeControlResponse&& from) noexcept
      : BrakeControlResponse(nullptr, std::move(from)) {}
  inline BrakeControlResponse& operator=(const BrakeControlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BrakeControlResponse& operator=(BrakeControlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BrakeControlResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BrakeControlResponse* internal_default_instance() {
    return reinterpret_cast<const BrakeControlResponse*>(
        &_BrakeControlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BrakeControlResponse& a, BrakeControlResponse& b) { a.Swap(&b); }
  inline void Swap(BrakeControlResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BrakeControlResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BrakeControlResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BrakeControlResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BrakeControlResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BrakeControlResponse& from) { BrakeControlResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BrakeControlResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.BrakeControlResponse"; }

 protected:
  explicit BrakeControlResponse(::google::protobuf::Arena* arena);
  BrakeControlResponse(::google::protobuf::Arena* arena, const BrakeControlResponse& from);
  BrakeControlResponse(::google::protobuf::Arena* arena, BrakeControlResponse&& from) noexcept
      : BrakeControlResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFailedDevicesFieldNumber = 4,
    kErrorCodeFieldNumber = 2,
    kErrorMessageFieldNumber = 3,
    kSuccessFieldNumber = 1,
  };
  // repeated string failed_devices = 4;
  int failed_devices_size() const;
  private:
  int _internal_failed_devices_size() const;

  public:
  void clear_failed_devices() ;
  const std::string& failed_devices(int index) const;
  std::string* mutable_failed_devices(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_failed_devices(int index, Arg_&& value, Args_... args);
  std::string* add_failed_devices();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_failed_devices(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& failed_devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_failed_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_failed_devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_failed_devices();

  public:
  // string error_code = 2;
  void clear_error_code() ;
  const std::string& error_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_code(Arg_&& arg, Args_... args);
  std::string* mutable_error_code();
  PROTOBUF_NODISCARD std::string* release_error_code();
  void set_allocated_error_code(std::string* value);

  private:
  const std::string& _internal_error_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_code(
      const std::string& value);
  std::string* _internal_mutable_error_code();

  public:
  // string error_message = 3;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.BrakeControlResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BrakeControlResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> failed_devices_;
    ::google::protobuf::internal::ArenaStringPtr error_code_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class BrakeControlRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:H10WService.BrakeControlRequest) */ {
 public:
  inline BrakeControlRequest() : BrakeControlRequest(nullptr) {}
  ~BrakeControlRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BrakeControlRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BrakeControlRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BrakeControlRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BrakeControlRequest(const BrakeControlRequest& from) : BrakeControlRequest(nullptr, from) {}
  inline BrakeControlRequest(BrakeControlRequest&& from) noexcept
      : BrakeControlRequest(nullptr, std::move(from)) {}
  inline BrakeControlRequest& operator=(const BrakeControlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BrakeControlRequest& operator=(BrakeControlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BrakeControlRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BrakeControlRequest* internal_default_instance() {
    return reinterpret_cast<const BrakeControlRequest*>(
        &_BrakeControlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BrakeControlRequest& a, BrakeControlRequest& b) { a.Swap(&b); }
  inline void Swap(BrakeControlRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BrakeControlRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BrakeControlRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BrakeControlRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BrakeControlRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BrakeControlRequest& from) { BrakeControlRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BrakeControlRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "H10WService.BrakeControlRequest"; }

 protected:
  explicit BrakeControlRequest(::google::protobuf::Arena* arena);
  BrakeControlRequest(::google::protobuf::Arena* arena, const BrakeControlRequest& from);
  BrakeControlRequest(::google::protobuf::Arena* arena, BrakeControlRequest&& from) noexcept
      : BrakeControlRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using BRAKE_STATE = BrakeControlRequest_BRAKE_STATE;
  static constexpr BRAKE_STATE BRAKE_OFF = BrakeControlRequest_BRAKE_STATE_BRAKE_OFF;
  static constexpr BRAKE_STATE BRAKE_ON = BrakeControlRequest_BRAKE_STATE_BRAKE_ON;
  static inline bool BRAKE_STATE_IsValid(int value) {
    return BrakeControlRequest_BRAKE_STATE_IsValid(value);
  }
  static constexpr BRAKE_STATE BRAKE_STATE_MIN = BrakeControlRequest_BRAKE_STATE_BRAKE_STATE_MIN;
  static constexpr BRAKE_STATE BRAKE_STATE_MAX = BrakeControlRequest_BRAKE_STATE_BRAKE_STATE_MAX;
  static constexpr int BRAKE_STATE_ARRAYSIZE = BrakeControlRequest_BRAKE_STATE_BRAKE_STATE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* BRAKE_STATE_descriptor() {
    return BrakeControlRequest_BRAKE_STATE_descriptor();
  }
  template <typename T>
  static inline const std::string& BRAKE_STATE_Name(T value) {
    return BrakeControlRequest_BRAKE_STATE_Name(value);
  }
  static inline bool BRAKE_STATE_Parse(absl::string_view name, BRAKE_STATE* value) {
    return BrakeControlRequest_BRAKE_STATE_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRequestStateFieldNumber = 1,
    kAutoClearErrorFieldNumber = 2,
  };
  // .H10WService.BrakeControlRequest.BRAKE_STATE request_state = 1;
  void clear_request_state() ;
  ::H10WService::BrakeControlRequest_BRAKE_STATE request_state() const;
  void set_request_state(::H10WService::BrakeControlRequest_BRAKE_STATE value);

  private:
  ::H10WService::BrakeControlRequest_BRAKE_STATE _internal_request_state() const;
  void _internal_set_request_state(::H10WService::BrakeControlRequest_BRAKE_STATE value);

  public:
  // bool auto_clear_error = 2;
  void clear_auto_clear_error() ;
  bool auto_clear_error() const;
  void set_auto_clear_error(bool value);

  private:
  bool _internal_auto_clear_error() const;
  void _internal_set_auto_clear_error(bool value);

  public:
  // @@protoc_insertion_point(class_scope:H10WService.BrakeControlRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BrakeControlRequest& from_msg);
    int request_state_;
    bool auto_clear_error_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Service_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BrakeControlRequest

// .H10WService.BrakeControlRequest.BRAKE_STATE request_state = 1;
inline void BrakeControlRequest::clear_request_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_state_ = 0;
}
inline ::H10WService::BrakeControlRequest_BRAKE_STATE BrakeControlRequest::request_state() const {
  // @@protoc_insertion_point(field_get:H10WService.BrakeControlRequest.request_state)
  return _internal_request_state();
}
inline void BrakeControlRequest::set_request_state(::H10WService::BrakeControlRequest_BRAKE_STATE value) {
  _internal_set_request_state(value);
  // @@protoc_insertion_point(field_set:H10WService.BrakeControlRequest.request_state)
}
inline ::H10WService::BrakeControlRequest_BRAKE_STATE BrakeControlRequest::_internal_request_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::H10WService::BrakeControlRequest_BRAKE_STATE>(_impl_.request_state_);
}
inline void BrakeControlRequest::_internal_set_request_state(::H10WService::BrakeControlRequest_BRAKE_STATE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_state_ = value;
}

// bool auto_clear_error = 2;
inline void BrakeControlRequest::clear_auto_clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_clear_error_ = false;
}
inline bool BrakeControlRequest::auto_clear_error() const {
  // @@protoc_insertion_point(field_get:H10WService.BrakeControlRequest.auto_clear_error)
  return _internal_auto_clear_error();
}
inline void BrakeControlRequest::set_auto_clear_error(bool value) {
  _internal_set_auto_clear_error(value);
  // @@protoc_insertion_point(field_set:H10WService.BrakeControlRequest.auto_clear_error)
}
inline bool BrakeControlRequest::_internal_auto_clear_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.auto_clear_error_;
}
inline void BrakeControlRequest::_internal_set_auto_clear_error(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_clear_error_ = value;
}

// -------------------------------------------------------------------

// BrakeControlResponse

// bool success = 1;
inline void BrakeControlResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool BrakeControlResponse::success() const {
  // @@protoc_insertion_point(field_get:H10WService.BrakeControlResponse.success)
  return _internal_success();
}
inline void BrakeControlResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:H10WService.BrakeControlResponse.success)
}
inline bool BrakeControlResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void BrakeControlResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string error_code = 2;
inline void BrakeControlResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.ClearToEmpty();
}
inline const std::string& BrakeControlResponse::error_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:H10WService.BrakeControlResponse.error_code)
  return _internal_error_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BrakeControlResponse::set_error_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:H10WService.BrakeControlResponse.error_code)
}
inline std::string* BrakeControlResponse::mutable_error_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_code();
  // @@protoc_insertion_point(field_mutable:H10WService.BrakeControlResponse.error_code)
  return _s;
}
inline const std::string& BrakeControlResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_code_.Get();
}
inline void BrakeControlResponse::_internal_set_error_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.Set(value, GetArena());
}
inline std::string* BrakeControlResponse::_internal_mutable_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_code_.Mutable( GetArena());
}
inline std::string* BrakeControlResponse::release_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:H10WService.BrakeControlResponse.error_code)
  return _impl_.error_code_.Release();
}
inline void BrakeControlResponse::set_allocated_error_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_code_.IsDefault()) {
    _impl_.error_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:H10WService.BrakeControlResponse.error_code)
}

// string error_message = 3;
inline void BrakeControlResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& BrakeControlResponse::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:H10WService.BrakeControlResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BrakeControlResponse::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:H10WService.BrakeControlResponse.error_message)
}
inline std::string* BrakeControlResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:H10WService.BrakeControlResponse.error_message)
  return _s;
}
inline const std::string& BrakeControlResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void BrakeControlResponse::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* BrakeControlResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* BrakeControlResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:H10WService.BrakeControlResponse.error_message)
  return _impl_.error_message_.Release();
}
inline void BrakeControlResponse::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:H10WService.BrakeControlResponse.error_message)
}

// repeated string failed_devices = 4;
inline int BrakeControlResponse::_internal_failed_devices_size() const {
  return _internal_failed_devices().size();
}
inline int BrakeControlResponse::failed_devices_size() const {
  return _internal_failed_devices_size();
}
inline void BrakeControlResponse::clear_failed_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_devices_.Clear();
}
inline std::string* BrakeControlResponse::add_failed_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_failed_devices()->Add();
  // @@protoc_insertion_point(field_add_mutable:H10WService.BrakeControlResponse.failed_devices)
  return _s;
}
inline const std::string& BrakeControlResponse::failed_devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:H10WService.BrakeControlResponse.failed_devices)
  return _internal_failed_devices().Get(index);
}
inline std::string* BrakeControlResponse::mutable_failed_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:H10WService.BrakeControlResponse.failed_devices)
  return _internal_mutable_failed_devices()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void BrakeControlResponse::set_failed_devices(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_failed_devices()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:H10WService.BrakeControlResponse.failed_devices)
}
template <typename Arg_, typename... Args_>
inline void BrakeControlResponse::add_failed_devices(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_failed_devices(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:H10WService.BrakeControlResponse.failed_devices)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BrakeControlResponse::failed_devices() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.BrakeControlResponse.failed_devices)
  return _internal_failed_devices();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BrakeControlResponse::mutable_failed_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.BrakeControlResponse.failed_devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_failed_devices();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BrakeControlResponse::_internal_failed_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_devices_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BrakeControlResponse::_internal_mutable_failed_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.failed_devices_;
}

// -------------------------------------------------------------------

// PowerControlRequest

// .H10WService.PowerControlRequest.POWER_STATE request_state = 1;
inline void PowerControlRequest::clear_request_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_state_ = 0;
}
inline ::H10WService::PowerControlRequest_POWER_STATE PowerControlRequest::request_state() const {
  // @@protoc_insertion_point(field_get:H10WService.PowerControlRequest.request_state)
  return _internal_request_state();
}
inline void PowerControlRequest::set_request_state(::H10WService::PowerControlRequest_POWER_STATE value) {
  _internal_set_request_state(value);
  // @@protoc_insertion_point(field_set:H10WService.PowerControlRequest.request_state)
}
inline ::H10WService::PowerControlRequest_POWER_STATE PowerControlRequest::_internal_request_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::H10WService::PowerControlRequest_POWER_STATE>(_impl_.request_state_);
}
inline void PowerControlRequest::_internal_set_request_state(::H10WService::PowerControlRequest_POWER_STATE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_state_ = value;
}

// -------------------------------------------------------------------

// PowerControlResponse

// bool success = 1;
inline void PowerControlResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool PowerControlResponse::success() const {
  // @@protoc_insertion_point(field_get:H10WService.PowerControlResponse.success)
  return _internal_success();
}
inline void PowerControlResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:H10WService.PowerControlResponse.success)
}
inline bool PowerControlResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void PowerControlResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string error_code = 2;
inline void PowerControlResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.ClearToEmpty();
}
inline const std::string& PowerControlResponse::error_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:H10WService.PowerControlResponse.error_code)
  return _internal_error_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PowerControlResponse::set_error_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:H10WService.PowerControlResponse.error_code)
}
inline std::string* PowerControlResponse::mutable_error_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_code();
  // @@protoc_insertion_point(field_mutable:H10WService.PowerControlResponse.error_code)
  return _s;
}
inline const std::string& PowerControlResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_code_.Get();
}
inline void PowerControlResponse::_internal_set_error_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.Set(value, GetArena());
}
inline std::string* PowerControlResponse::_internal_mutable_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_code_.Mutable( GetArena());
}
inline std::string* PowerControlResponse::release_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:H10WService.PowerControlResponse.error_code)
  return _impl_.error_code_.Release();
}
inline void PowerControlResponse::set_allocated_error_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_code_.IsDefault()) {
    _impl_.error_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:H10WService.PowerControlResponse.error_code)
}

// string error_message = 3;
inline void PowerControlResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& PowerControlResponse::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:H10WService.PowerControlResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PowerControlResponse::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:H10WService.PowerControlResponse.error_message)
}
inline std::string* PowerControlResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:H10WService.PowerControlResponse.error_message)
  return _s;
}
inline const std::string& PowerControlResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void PowerControlResponse::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* PowerControlResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* PowerControlResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:H10WService.PowerControlResponse.error_message)
  return _impl_.error_message_.Release();
}
inline void PowerControlResponse::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:H10WService.PowerControlResponse.error_message)
}

// -------------------------------------------------------------------

// TorqueOffSetRequest

// .H10WService.PART_INDEX part_index = 1;
inline void TorqueOffSetRequest::clear_part_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.part_index_ = 0;
}
inline ::H10WService::PART_INDEX TorqueOffSetRequest::part_index() const {
  // @@protoc_insertion_point(field_get:H10WService.TorqueOffSetRequest.part_index)
  return _internal_part_index();
}
inline void TorqueOffSetRequest::set_part_index(::H10WService::PART_INDEX value) {
  _internal_set_part_index(value);
  // @@protoc_insertion_point(field_set:H10WService.TorqueOffSetRequest.part_index)
}
inline ::H10WService::PART_INDEX TorqueOffSetRequest::_internal_part_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::H10WService::PART_INDEX>(_impl_.part_index_);
}
inline void TorqueOffSetRequest::_internal_set_part_index(::H10WService::PART_INDEX value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.part_index_ = value;
}

// -------------------------------------------------------------------

// TorqueOffSetResponse

// bool success = 1;
inline void TorqueOffSetResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool TorqueOffSetResponse::success() const {
  // @@protoc_insertion_point(field_get:H10WService.TorqueOffSetResponse.success)
  return _internal_success();
}
inline void TorqueOffSetResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:H10WService.TorqueOffSetResponse.success)
}
inline bool TorqueOffSetResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void TorqueOffSetResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string error_code = 2;
inline void TorqueOffSetResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.ClearToEmpty();
}
inline const std::string& TorqueOffSetResponse::error_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:H10WService.TorqueOffSetResponse.error_code)
  return _internal_error_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TorqueOffSetResponse::set_error_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:H10WService.TorqueOffSetResponse.error_code)
}
inline std::string* TorqueOffSetResponse::mutable_error_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_code();
  // @@protoc_insertion_point(field_mutable:H10WService.TorqueOffSetResponse.error_code)
  return _s;
}
inline const std::string& TorqueOffSetResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_code_.Get();
}
inline void TorqueOffSetResponse::_internal_set_error_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.Set(value, GetArena());
}
inline std::string* TorqueOffSetResponse::_internal_mutable_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_code_.Mutable( GetArena());
}
inline std::string* TorqueOffSetResponse::release_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:H10WService.TorqueOffSetResponse.error_code)
  return _impl_.error_code_.Release();
}
inline void TorqueOffSetResponse::set_allocated_error_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_code_.IsDefault()) {
    _impl_.error_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:H10WService.TorqueOffSetResponse.error_code)
}

// repeated float a_channel_offset = 3;
inline int TorqueOffSetResponse::_internal_a_channel_offset_size() const {
  return _internal_a_channel_offset().size();
}
inline int TorqueOffSetResponse::a_channel_offset_size() const {
  return _internal_a_channel_offset_size();
}
inline void TorqueOffSetResponse::clear_a_channel_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_channel_offset_.Clear();
}
inline float TorqueOffSetResponse::a_channel_offset(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.TorqueOffSetResponse.a_channel_offset)
  return _internal_a_channel_offset().Get(index);
}
inline void TorqueOffSetResponse::set_a_channel_offset(int index, float value) {
  _internal_mutable_a_channel_offset()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.TorqueOffSetResponse.a_channel_offset)
}
inline void TorqueOffSetResponse::add_a_channel_offset(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_a_channel_offset()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.TorqueOffSetResponse.a_channel_offset)
}
inline const ::google::protobuf::RepeatedField<float>& TorqueOffSetResponse::a_channel_offset() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.TorqueOffSetResponse.a_channel_offset)
  return _internal_a_channel_offset();
}
inline ::google::protobuf::RepeatedField<float>* TorqueOffSetResponse::mutable_a_channel_offset()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.TorqueOffSetResponse.a_channel_offset)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_a_channel_offset();
}
inline const ::google::protobuf::RepeatedField<float>&
TorqueOffSetResponse::_internal_a_channel_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_channel_offset_;
}
inline ::google::protobuf::RepeatedField<float>* TorqueOffSetResponse::_internal_mutable_a_channel_offset() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.a_channel_offset_;
}

// repeated float b_channel_offset = 4;
inline int TorqueOffSetResponse::_internal_b_channel_offset_size() const {
  return _internal_b_channel_offset().size();
}
inline int TorqueOffSetResponse::b_channel_offset_size() const {
  return _internal_b_channel_offset_size();
}
inline void TorqueOffSetResponse::clear_b_channel_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_channel_offset_.Clear();
}
inline float TorqueOffSetResponse::b_channel_offset(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.TorqueOffSetResponse.b_channel_offset)
  return _internal_b_channel_offset().Get(index);
}
inline void TorqueOffSetResponse::set_b_channel_offset(int index, float value) {
  _internal_mutable_b_channel_offset()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.TorqueOffSetResponse.b_channel_offset)
}
inline void TorqueOffSetResponse::add_b_channel_offset(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_b_channel_offset()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.TorqueOffSetResponse.b_channel_offset)
}
inline const ::google::protobuf::RepeatedField<float>& TorqueOffSetResponse::b_channel_offset() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.TorqueOffSetResponse.b_channel_offset)
  return _internal_b_channel_offset();
}
inline ::google::protobuf::RepeatedField<float>* TorqueOffSetResponse::mutable_b_channel_offset()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.TorqueOffSetResponse.b_channel_offset)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_b_channel_offset();
}
inline const ::google::protobuf::RepeatedField<float>&
TorqueOffSetResponse::_internal_b_channel_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_channel_offset_;
}
inline ::google::protobuf::RepeatedField<float>* TorqueOffSetResponse::_internal_mutable_b_channel_offset() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.b_channel_offset_;
}

// -------------------------------------------------------------------

// GetErrorCodeRequest

// .H10WService.PART_INDEX part_index = 1;
inline void GetErrorCodeRequest::clear_part_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.part_index_ = 0;
}
inline ::H10WService::PART_INDEX GetErrorCodeRequest::part_index() const {
  // @@protoc_insertion_point(field_get:H10WService.GetErrorCodeRequest.part_index)
  return _internal_part_index();
}
inline void GetErrorCodeRequest::set_part_index(::H10WService::PART_INDEX value) {
  _internal_set_part_index(value);
  // @@protoc_insertion_point(field_set:H10WService.GetErrorCodeRequest.part_index)
}
inline ::H10WService::PART_INDEX GetErrorCodeRequest::_internal_part_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::H10WService::PART_INDEX>(_impl_.part_index_);
}
inline void GetErrorCodeRequest::_internal_set_part_index(::H10WService::PART_INDEX value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.part_index_ = value;
}

// -------------------------------------------------------------------

// GetErrorCodeResponse

// bool success = 1;
inline void GetErrorCodeResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool GetErrorCodeResponse::success() const {
  // @@protoc_insertion_point(field_get:H10WService.GetErrorCodeResponse.success)
  return _internal_success();
}
inline void GetErrorCodeResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:H10WService.GetErrorCodeResponse.success)
}
inline bool GetErrorCodeResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void GetErrorCodeResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string error_code = 2;
inline void GetErrorCodeResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.ClearToEmpty();
}
inline const std::string& GetErrorCodeResponse::error_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:H10WService.GetErrorCodeResponse.error_code)
  return _internal_error_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetErrorCodeResponse::set_error_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:H10WService.GetErrorCodeResponse.error_code)
}
inline std::string* GetErrorCodeResponse::mutable_error_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_code();
  // @@protoc_insertion_point(field_mutable:H10WService.GetErrorCodeResponse.error_code)
  return _s;
}
inline const std::string& GetErrorCodeResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_code_.Get();
}
inline void GetErrorCodeResponse::_internal_set_error_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.Set(value, GetArena());
}
inline std::string* GetErrorCodeResponse::_internal_mutable_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_code_.Mutable( GetArena());
}
inline std::string* GetErrorCodeResponse::release_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:H10WService.GetErrorCodeResponse.error_code)
  return _impl_.error_code_.Release();
}
inline void GetErrorCodeResponse::set_allocated_error_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_code_.IsDefault()) {
    _impl_.error_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:H10WService.GetErrorCodeResponse.error_code)
}

// repeated uint32 joint_error_code = 3;
inline int GetErrorCodeResponse::_internal_joint_error_code_size() const {
  return _internal_joint_error_code().size();
}
inline int GetErrorCodeResponse::joint_error_code_size() const {
  return _internal_joint_error_code_size();
}
inline void GetErrorCodeResponse::clear_joint_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_error_code_.Clear();
}
inline ::uint32_t GetErrorCodeResponse::joint_error_code(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.GetErrorCodeResponse.joint_error_code)
  return _internal_joint_error_code().Get(index);
}
inline void GetErrorCodeResponse::set_joint_error_code(int index, ::uint32_t value) {
  _internal_mutable_joint_error_code()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.GetErrorCodeResponse.joint_error_code)
}
inline void GetErrorCodeResponse::add_joint_error_code(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_joint_error_code()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.GetErrorCodeResponse.joint_error_code)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& GetErrorCodeResponse::joint_error_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.GetErrorCodeResponse.joint_error_code)
  return _internal_joint_error_code();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* GetErrorCodeResponse::mutable_joint_error_code()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.GetErrorCodeResponse.joint_error_code)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_joint_error_code();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
GetErrorCodeResponse::_internal_joint_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.joint_error_code_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* GetErrorCodeResponse::_internal_mutable_joint_error_code() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.joint_error_code_;
}

// -------------------------------------------------------------------

// CalibrationRequest

// .H10WService.JOINT_INDEX joint_index = 1;
inline void CalibrationRequest::clear_joint_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_ = 0;
}
inline ::H10WService::JOINT_INDEX CalibrationRequest::joint_index() const {
  // @@protoc_insertion_point(field_get:H10WService.CalibrationRequest.joint_index)
  return _internal_joint_index();
}
inline void CalibrationRequest::set_joint_index(::H10WService::JOINT_INDEX value) {
  _internal_set_joint_index(value);
  // @@protoc_insertion_point(field_set:H10WService.CalibrationRequest.joint_index)
}
inline ::H10WService::JOINT_INDEX CalibrationRequest::_internal_joint_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::H10WService::JOINT_INDEX>(_impl_.joint_index_);
}
inline void CalibrationRequest::_internal_set_joint_index(::H10WService::JOINT_INDEX value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_ = value;
}

// -------------------------------------------------------------------

// CalibrationResponse

// bool success = 1;
inline void CalibrationResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool CalibrationResponse::success() const {
  // @@protoc_insertion_point(field_get:H10WService.CalibrationResponse.success)
  return _internal_success();
}
inline void CalibrationResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:H10WService.CalibrationResponse.success)
}
inline bool CalibrationResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void CalibrationResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// SaveParameterRequest

// .H10WService.JOINT_INDEX joint_index = 1;
inline void SaveParameterRequest::clear_joint_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_ = 0;
}
inline ::H10WService::JOINT_INDEX SaveParameterRequest::joint_index() const {
  // @@protoc_insertion_point(field_get:H10WService.SaveParameterRequest.joint_index)
  return _internal_joint_index();
}
inline void SaveParameterRequest::set_joint_index(::H10WService::JOINT_INDEX value) {
  _internal_set_joint_index(value);
  // @@protoc_insertion_point(field_set:H10WService.SaveParameterRequest.joint_index)
}
inline ::H10WService::JOINT_INDEX SaveParameterRequest::_internal_joint_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::H10WService::JOINT_INDEX>(_impl_.joint_index_);
}
inline void SaveParameterRequest::_internal_set_joint_index(::H10WService::JOINT_INDEX value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_ = value;
}

// -------------------------------------------------------------------

// SaveParameterResponse

// bool success = 1;
inline void SaveParameterResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool SaveParameterResponse::success() const {
  // @@protoc_insertion_point(field_get:H10WService.SaveParameterResponse.success)
  return _internal_success();
}
inline void SaveParameterResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:H10WService.SaveParameterResponse.success)
}
inline bool SaveParameterResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void SaveParameterResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// ClearErrorRequest

// .H10WService.JOINT_INDEX joint_index = 1;
inline void ClearErrorRequest::clear_joint_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_ = 0;
}
inline ::H10WService::JOINT_INDEX ClearErrorRequest::joint_index() const {
  // @@protoc_insertion_point(field_get:H10WService.ClearErrorRequest.joint_index)
  return _internal_joint_index();
}
inline void ClearErrorRequest::set_joint_index(::H10WService::JOINT_INDEX value) {
  _internal_set_joint_index(value);
  // @@protoc_insertion_point(field_set:H10WService.ClearErrorRequest.joint_index)
}
inline ::H10WService::JOINT_INDEX ClearErrorRequest::_internal_joint_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::H10WService::JOINT_INDEX>(_impl_.joint_index_);
}
inline void ClearErrorRequest::_internal_set_joint_index(::H10WService::JOINT_INDEX value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_ = value;
}

// -------------------------------------------------------------------

// ClearErrorResponse

// bool success = 1;
inline void ClearErrorResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool ClearErrorResponse::success() const {
  // @@protoc_insertion_point(field_get:H10WService.ClearErrorResponse.success)
  return _internal_success();
}
inline void ClearErrorResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:H10WService.ClearErrorResponse.success)
}
inline bool ClearErrorResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void ClearErrorResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// SetJointSoftLimitRequest

// repeated .H10WService.JOINT_INDEX joint_index = 1;
inline int SetJointSoftLimitRequest::_internal_joint_index_size() const {
  return _internal_joint_index().size();
}
inline int SetJointSoftLimitRequest::joint_index_size() const {
  return _internal_joint_index_size();
}
inline void SetJointSoftLimitRequest::clear_joint_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_.Clear();
}
inline ::H10WService::JOINT_INDEX SetJointSoftLimitRequest::joint_index(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.SetJointSoftLimitRequest.joint_index)
  return static_cast<::H10WService::JOINT_INDEX>(_internal_joint_index().Get(index));
}
inline void SetJointSoftLimitRequest::set_joint_index(int index, ::H10WService::JOINT_INDEX value) {
  _internal_mutable_joint_index()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.SetJointSoftLimitRequest.joint_index)
}
inline void SetJointSoftLimitRequest::add_joint_index(::H10WService::JOINT_INDEX value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_joint_index()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.SetJointSoftLimitRequest.joint_index)
}
inline const ::google::protobuf::RepeatedField<int>& SetJointSoftLimitRequest::joint_index() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.SetJointSoftLimitRequest.joint_index)
  return _internal_joint_index();
}
inline ::google::protobuf::RepeatedField<int>* SetJointSoftLimitRequest::mutable_joint_index()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.SetJointSoftLimitRequest.joint_index)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_joint_index();
}
inline const ::google::protobuf::RepeatedField<int>& SetJointSoftLimitRequest::_internal_joint_index()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.joint_index_;
}
inline ::google::protobuf::RepeatedField<int>* SetJointSoftLimitRequest::_internal_mutable_joint_index() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.joint_index_;
}

// repeated double min_position = 2;
inline int SetJointSoftLimitRequest::_internal_min_position_size() const {
  return _internal_min_position().size();
}
inline int SetJointSoftLimitRequest::min_position_size() const {
  return _internal_min_position_size();
}
inline void SetJointSoftLimitRequest::clear_min_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_position_.Clear();
}
inline double SetJointSoftLimitRequest::min_position(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.SetJointSoftLimitRequest.min_position)
  return _internal_min_position().Get(index);
}
inline void SetJointSoftLimitRequest::set_min_position(int index, double value) {
  _internal_mutable_min_position()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.SetJointSoftLimitRequest.min_position)
}
inline void SetJointSoftLimitRequest::add_min_position(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_min_position()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.SetJointSoftLimitRequest.min_position)
}
inline const ::google::protobuf::RepeatedField<double>& SetJointSoftLimitRequest::min_position() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.SetJointSoftLimitRequest.min_position)
  return _internal_min_position();
}
inline ::google::protobuf::RepeatedField<double>* SetJointSoftLimitRequest::mutable_min_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.SetJointSoftLimitRequest.min_position)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_min_position();
}
inline const ::google::protobuf::RepeatedField<double>&
SetJointSoftLimitRequest::_internal_min_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_position_;
}
inline ::google::protobuf::RepeatedField<double>* SetJointSoftLimitRequest::_internal_mutable_min_position() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.min_position_;
}

// repeated double max_position = 3;
inline int SetJointSoftLimitRequest::_internal_max_position_size() const {
  return _internal_max_position().size();
}
inline int SetJointSoftLimitRequest::max_position_size() const {
  return _internal_max_position_size();
}
inline void SetJointSoftLimitRequest::clear_max_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_position_.Clear();
}
inline double SetJointSoftLimitRequest::max_position(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.SetJointSoftLimitRequest.max_position)
  return _internal_max_position().Get(index);
}
inline void SetJointSoftLimitRequest::set_max_position(int index, double value) {
  _internal_mutable_max_position()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.SetJointSoftLimitRequest.max_position)
}
inline void SetJointSoftLimitRequest::add_max_position(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_max_position()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.SetJointSoftLimitRequest.max_position)
}
inline const ::google::protobuf::RepeatedField<double>& SetJointSoftLimitRequest::max_position() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.SetJointSoftLimitRequest.max_position)
  return _internal_max_position();
}
inline ::google::protobuf::RepeatedField<double>* SetJointSoftLimitRequest::mutable_max_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.SetJointSoftLimitRequest.max_position)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_max_position();
}
inline const ::google::protobuf::RepeatedField<double>&
SetJointSoftLimitRequest::_internal_max_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_position_;
}
inline ::google::protobuf::RepeatedField<double>* SetJointSoftLimitRequest::_internal_mutable_max_position() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.max_position_;
}

// -------------------------------------------------------------------

// SetJointSoftLimitResponse

// bool success = 1;
inline void SetJointSoftLimitResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool SetJointSoftLimitResponse::success() const {
  // @@protoc_insertion_point(field_get:H10WService.SetJointSoftLimitResponse.success)
  return _internal_success();
}
inline void SetJointSoftLimitResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:H10WService.SetJointSoftLimitResponse.success)
}
inline bool SetJointSoftLimitResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void SetJointSoftLimitResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// GetJointSoftLimitRequest

// repeated .H10WService.JOINT_INDEX joint_index = 1;
inline int GetJointSoftLimitRequest::_internal_joint_index_size() const {
  return _internal_joint_index().size();
}
inline int GetJointSoftLimitRequest::joint_index_size() const {
  return _internal_joint_index_size();
}
inline void GetJointSoftLimitRequest::clear_joint_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_.Clear();
}
inline ::H10WService::JOINT_INDEX GetJointSoftLimitRequest::joint_index(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.GetJointSoftLimitRequest.joint_index)
  return static_cast<::H10WService::JOINT_INDEX>(_internal_joint_index().Get(index));
}
inline void GetJointSoftLimitRequest::set_joint_index(int index, ::H10WService::JOINT_INDEX value) {
  _internal_mutable_joint_index()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.GetJointSoftLimitRequest.joint_index)
}
inline void GetJointSoftLimitRequest::add_joint_index(::H10WService::JOINT_INDEX value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_joint_index()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.GetJointSoftLimitRequest.joint_index)
}
inline const ::google::protobuf::RepeatedField<int>& GetJointSoftLimitRequest::joint_index() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.GetJointSoftLimitRequest.joint_index)
  return _internal_joint_index();
}
inline ::google::protobuf::RepeatedField<int>* GetJointSoftLimitRequest::mutable_joint_index()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.GetJointSoftLimitRequest.joint_index)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_joint_index();
}
inline const ::google::protobuf::RepeatedField<int>& GetJointSoftLimitRequest::_internal_joint_index()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.joint_index_;
}
inline ::google::protobuf::RepeatedField<int>* GetJointSoftLimitRequest::_internal_mutable_joint_index() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.joint_index_;
}

// -------------------------------------------------------------------

// GetJointSoftLimitResponse

// repeated double min_position = 2;
inline int GetJointSoftLimitResponse::_internal_min_position_size() const {
  return _internal_min_position().size();
}
inline int GetJointSoftLimitResponse::min_position_size() const {
  return _internal_min_position_size();
}
inline void GetJointSoftLimitResponse::clear_min_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_position_.Clear();
}
inline double GetJointSoftLimitResponse::min_position(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.GetJointSoftLimitResponse.min_position)
  return _internal_min_position().Get(index);
}
inline void GetJointSoftLimitResponse::set_min_position(int index, double value) {
  _internal_mutable_min_position()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.GetJointSoftLimitResponse.min_position)
}
inline void GetJointSoftLimitResponse::add_min_position(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_min_position()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.GetJointSoftLimitResponse.min_position)
}
inline const ::google::protobuf::RepeatedField<double>& GetJointSoftLimitResponse::min_position() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.GetJointSoftLimitResponse.min_position)
  return _internal_min_position();
}
inline ::google::protobuf::RepeatedField<double>* GetJointSoftLimitResponse::mutable_min_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.GetJointSoftLimitResponse.min_position)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_min_position();
}
inline const ::google::protobuf::RepeatedField<double>&
GetJointSoftLimitResponse::_internal_min_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_position_;
}
inline ::google::protobuf::RepeatedField<double>* GetJointSoftLimitResponse::_internal_mutable_min_position() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.min_position_;
}

// repeated double max_position = 3;
inline int GetJointSoftLimitResponse::_internal_max_position_size() const {
  return _internal_max_position().size();
}
inline int GetJointSoftLimitResponse::max_position_size() const {
  return _internal_max_position_size();
}
inline void GetJointSoftLimitResponse::clear_max_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_position_.Clear();
}
inline double GetJointSoftLimitResponse::max_position(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.GetJointSoftLimitResponse.max_position)
  return _internal_max_position().Get(index);
}
inline void GetJointSoftLimitResponse::set_max_position(int index, double value) {
  _internal_mutable_max_position()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.GetJointSoftLimitResponse.max_position)
}
inline void GetJointSoftLimitResponse::add_max_position(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_max_position()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.GetJointSoftLimitResponse.max_position)
}
inline const ::google::protobuf::RepeatedField<double>& GetJointSoftLimitResponse::max_position() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.GetJointSoftLimitResponse.max_position)
  return _internal_max_position();
}
inline ::google::protobuf::RepeatedField<double>* GetJointSoftLimitResponse::mutable_max_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.GetJointSoftLimitResponse.max_position)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_max_position();
}
inline const ::google::protobuf::RepeatedField<double>&
GetJointSoftLimitResponse::_internal_max_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_position_;
}
inline ::google::protobuf::RepeatedField<double>* GetJointSoftLimitResponse::_internal_mutable_max_position() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.max_position_;
}

// -------------------------------------------------------------------

// GetJointHardLimitRequest

// repeated .H10WService.JOINT_INDEX joint_index = 1;
inline int GetJointHardLimitRequest::_internal_joint_index_size() const {
  return _internal_joint_index().size();
}
inline int GetJointHardLimitRequest::joint_index_size() const {
  return _internal_joint_index_size();
}
inline void GetJointHardLimitRequest::clear_joint_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_.Clear();
}
inline ::H10WService::JOINT_INDEX GetJointHardLimitRequest::joint_index(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.GetJointHardLimitRequest.joint_index)
  return static_cast<::H10WService::JOINT_INDEX>(_internal_joint_index().Get(index));
}
inline void GetJointHardLimitRequest::set_joint_index(int index, ::H10WService::JOINT_INDEX value) {
  _internal_mutable_joint_index()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.GetJointHardLimitRequest.joint_index)
}
inline void GetJointHardLimitRequest::add_joint_index(::H10WService::JOINT_INDEX value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_joint_index()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.GetJointHardLimitRequest.joint_index)
}
inline const ::google::protobuf::RepeatedField<int>& GetJointHardLimitRequest::joint_index() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.GetJointHardLimitRequest.joint_index)
  return _internal_joint_index();
}
inline ::google::protobuf::RepeatedField<int>* GetJointHardLimitRequest::mutable_joint_index()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.GetJointHardLimitRequest.joint_index)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_joint_index();
}
inline const ::google::protobuf::RepeatedField<int>& GetJointHardLimitRequest::_internal_joint_index()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.joint_index_;
}
inline ::google::protobuf::RepeatedField<int>* GetJointHardLimitRequest::_internal_mutable_joint_index() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.joint_index_;
}

// -------------------------------------------------------------------

// GetJointHardLimitResponse

// repeated double min_position = 2;
inline int GetJointHardLimitResponse::_internal_min_position_size() const {
  return _internal_min_position().size();
}
inline int GetJointHardLimitResponse::min_position_size() const {
  return _internal_min_position_size();
}
inline void GetJointHardLimitResponse::clear_min_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_position_.Clear();
}
inline double GetJointHardLimitResponse::min_position(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.GetJointHardLimitResponse.min_position)
  return _internal_min_position().Get(index);
}
inline void GetJointHardLimitResponse::set_min_position(int index, double value) {
  _internal_mutable_min_position()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.GetJointHardLimitResponse.min_position)
}
inline void GetJointHardLimitResponse::add_min_position(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_min_position()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.GetJointHardLimitResponse.min_position)
}
inline const ::google::protobuf::RepeatedField<double>& GetJointHardLimitResponse::min_position() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.GetJointHardLimitResponse.min_position)
  return _internal_min_position();
}
inline ::google::protobuf::RepeatedField<double>* GetJointHardLimitResponse::mutable_min_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.GetJointHardLimitResponse.min_position)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_min_position();
}
inline const ::google::protobuf::RepeatedField<double>&
GetJointHardLimitResponse::_internal_min_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_position_;
}
inline ::google::protobuf::RepeatedField<double>* GetJointHardLimitResponse::_internal_mutable_min_position() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.min_position_;
}

// repeated double max_position = 3;
inline int GetJointHardLimitResponse::_internal_max_position_size() const {
  return _internal_max_position().size();
}
inline int GetJointHardLimitResponse::max_position_size() const {
  return _internal_max_position_size();
}
inline void GetJointHardLimitResponse::clear_max_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_position_.Clear();
}
inline double GetJointHardLimitResponse::max_position(int index) const {
  // @@protoc_insertion_point(field_get:H10WService.GetJointHardLimitResponse.max_position)
  return _internal_max_position().Get(index);
}
inline void GetJointHardLimitResponse::set_max_position(int index, double value) {
  _internal_mutable_max_position()->Set(index, value);
  // @@protoc_insertion_point(field_set:H10WService.GetJointHardLimitResponse.max_position)
}
inline void GetJointHardLimitResponse::add_max_position(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_max_position()->Add(value);
  // @@protoc_insertion_point(field_add:H10WService.GetJointHardLimitResponse.max_position)
}
inline const ::google::protobuf::RepeatedField<double>& GetJointHardLimitResponse::max_position() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:H10WService.GetJointHardLimitResponse.max_position)
  return _internal_max_position();
}
inline ::google::protobuf::RepeatedField<double>* GetJointHardLimitResponse::mutable_max_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:H10WService.GetJointHardLimitResponse.max_position)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_max_position();
}
inline const ::google::protobuf::RepeatedField<double>&
GetJointHardLimitResponse::_internal_max_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_position_;
}
inline ::google::protobuf::RepeatedField<double>* GetJointHardLimitResponse::_internal_mutable_max_position() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.max_position_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace H10WService


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::H10WService::BrakeControlRequest_BRAKE_STATE> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::H10WService::BrakeControlRequest_BRAKE_STATE>() {
  return ::H10WService::BrakeControlRequest_BRAKE_STATE_descriptor();
}
template <>
struct is_proto_enum<::H10WService::PowerControlRequest_POWER_STATE> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::H10WService::PowerControlRequest_POWER_STATE>() {
  return ::H10WService::PowerControlRequest_POWER_STATE_descriptor();
}
template <>
struct is_proto_enum<::H10WService::PART_INDEX> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::H10WService::PART_INDEX>() {
  return ::H10WService::PART_INDEX_descriptor();
}
template <>
struct is_proto_enum<::H10WService::JOINT_INDEX> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::H10WService::JOINT_INDEX>() {
  return ::H10WService::JOINT_INDEX_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // Service_2eproto_2epb_2eh
