// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: chassis_service.proto
// Protobuf C++ Version: 5.29.0

#ifndef chassis_5fservice_2eproto_2epb_2eh
#define chassis_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_chassis_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_chassis_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_chassis_5fservice_2eproto;
namespace controller {
class GetMaxVelocityResponse;
struct GetMaxVelocityResponseDefaultTypeInternal;
extern GetMaxVelocityResponseDefaultTypeInternal _GetMaxVelocityResponse_default_instance_;
class SetMaxVelocityRequest;
struct SetMaxVelocityRequestDefaultTypeInternal;
extern SetMaxVelocityRequestDefaultTypeInternal _SetMaxVelocityRequest_default_instance_;
class SetMaxVelocityResponse;
struct SetMaxVelocityResponseDefaultTypeInternal;
extern SetMaxVelocityResponseDefaultTypeInternal _SetMaxVelocityResponse_default_instance_;
}  // namespace controller
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace controller {

// ===================================================================


// -------------------------------------------------------------------

class SetMaxVelocityResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.SetMaxVelocityResponse) */ {
 public:
  inline SetMaxVelocityResponse() : SetMaxVelocityResponse(nullptr) {}
  ~SetMaxVelocityResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetMaxVelocityResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetMaxVelocityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetMaxVelocityResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetMaxVelocityResponse(const SetMaxVelocityResponse& from) : SetMaxVelocityResponse(nullptr, from) {}
  inline SetMaxVelocityResponse(SetMaxVelocityResponse&& from) noexcept
      : SetMaxVelocityResponse(nullptr, std::move(from)) {}
  inline SetMaxVelocityResponse& operator=(const SetMaxVelocityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMaxVelocityResponse& operator=(SetMaxVelocityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMaxVelocityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMaxVelocityResponse* internal_default_instance() {
    return reinterpret_cast<const SetMaxVelocityResponse*>(
        &_SetMaxVelocityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SetMaxVelocityResponse& a, SetMaxVelocityResponse& b) { a.Swap(&b); }
  inline void Swap(SetMaxVelocityResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMaxVelocityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMaxVelocityResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetMaxVelocityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMaxVelocityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetMaxVelocityResponse& from) { SetMaxVelocityResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetMaxVelocityResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.SetMaxVelocityResponse"; }

 protected:
  explicit SetMaxVelocityResponse(::google::protobuf::Arena* arena);
  SetMaxVelocityResponse(::google::protobuf::Arena* arena, const SetMaxVelocityResponse& from);
  SetMaxVelocityResponse(::google::protobuf::Arena* arena, SetMaxVelocityResponse&& from) noexcept
      : SetMaxVelocityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:controller.SetMaxVelocityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetMaxVelocityResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chassis_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SetMaxVelocityRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.SetMaxVelocityRequest) */ {
 public:
  inline SetMaxVelocityRequest() : SetMaxVelocityRequest(nullptr) {}
  ~SetMaxVelocityRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetMaxVelocityRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetMaxVelocityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetMaxVelocityRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetMaxVelocityRequest(const SetMaxVelocityRequest& from) : SetMaxVelocityRequest(nullptr, from) {}
  inline SetMaxVelocityRequest(SetMaxVelocityRequest&& from) noexcept
      : SetMaxVelocityRequest(nullptr, std::move(from)) {}
  inline SetMaxVelocityRequest& operator=(const SetMaxVelocityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMaxVelocityRequest& operator=(SetMaxVelocityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMaxVelocityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMaxVelocityRequest* internal_default_instance() {
    return reinterpret_cast<const SetMaxVelocityRequest*>(
        &_SetMaxVelocityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SetMaxVelocityRequest& a, SetMaxVelocityRequest& b) { a.Swap(&b); }
  inline void Swap(SetMaxVelocityRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMaxVelocityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMaxVelocityRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetMaxVelocityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMaxVelocityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetMaxVelocityRequest& from) { SetMaxVelocityRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetMaxVelocityRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.SetMaxVelocityRequest"; }

 protected:
  explicit SetMaxVelocityRequest(::google::protobuf::Arena* arena);
  SetMaxVelocityRequest(::google::protobuf::Arena* arena, const SetMaxVelocityRequest& from);
  SetMaxVelocityRequest(::google::protobuf::Arena* arena, SetMaxVelocityRequest&& from) noexcept
      : SetMaxVelocityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLinearVelocityFieldNumber = 1,
    kAngularVelocityFieldNumber = 2,
  };
  // double linear_velocity = 1;
  void clear_linear_velocity() ;
  double linear_velocity() const;
  void set_linear_velocity(double value);

  private:
  double _internal_linear_velocity() const;
  void _internal_set_linear_velocity(double value);

  public:
  // double angular_velocity = 2;
  void clear_angular_velocity() ;
  double angular_velocity() const;
  void set_angular_velocity(double value);

  private:
  double _internal_angular_velocity() const;
  void _internal_set_angular_velocity(double value);

  public:
  // @@protoc_insertion_point(class_scope:controller.SetMaxVelocityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetMaxVelocityRequest& from_msg);
    double linear_velocity_;
    double angular_velocity_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chassis_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetMaxVelocityResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.GetMaxVelocityResponse) */ {
 public:
  inline GetMaxVelocityResponse() : GetMaxVelocityResponse(nullptr) {}
  ~GetMaxVelocityResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMaxVelocityResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMaxVelocityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMaxVelocityResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMaxVelocityResponse(const GetMaxVelocityResponse& from) : GetMaxVelocityResponse(nullptr, from) {}
  inline GetMaxVelocityResponse(GetMaxVelocityResponse&& from) noexcept
      : GetMaxVelocityResponse(nullptr, std::move(from)) {}
  inline GetMaxVelocityResponse& operator=(const GetMaxVelocityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMaxVelocityResponse& operator=(GetMaxVelocityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMaxVelocityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMaxVelocityResponse* internal_default_instance() {
    return reinterpret_cast<const GetMaxVelocityResponse*>(
        &_GetMaxVelocityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetMaxVelocityResponse& a, GetMaxVelocityResponse& b) { a.Swap(&b); }
  inline void Swap(GetMaxVelocityResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMaxVelocityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMaxVelocityResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMaxVelocityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMaxVelocityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMaxVelocityResponse& from) { GetMaxVelocityResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMaxVelocityResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.GetMaxVelocityResponse"; }

 protected:
  explicit GetMaxVelocityResponse(::google::protobuf::Arena* arena);
  GetMaxVelocityResponse(::google::protobuf::Arena* arena, const GetMaxVelocityResponse& from);
  GetMaxVelocityResponse(::google::protobuf::Arena* arena, GetMaxVelocityResponse&& from) noexcept
      : GetMaxVelocityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLinearVelocityFieldNumber = 1,
    kAngularVelocityFieldNumber = 2,
  };
  // double linear_velocity = 1;
  void clear_linear_velocity() ;
  double linear_velocity() const;
  void set_linear_velocity(double value);

  private:
  double _internal_linear_velocity() const;
  void _internal_set_linear_velocity(double value);

  public:
  // double angular_velocity = 2;
  void clear_angular_velocity() ;
  double angular_velocity() const;
  void set_angular_velocity(double value);

  private:
  double _internal_angular_velocity() const;
  void _internal_set_angular_velocity(double value);

  public:
  // @@protoc_insertion_point(class_scope:controller.GetMaxVelocityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMaxVelocityResponse& from_msg);
    double linear_velocity_;
    double angular_velocity_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chassis_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetMaxVelocityResponse

// double linear_velocity = 1;
inline void GetMaxVelocityResponse::clear_linear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linear_velocity_ = 0;
}
inline double GetMaxVelocityResponse::linear_velocity() const {
  // @@protoc_insertion_point(field_get:controller.GetMaxVelocityResponse.linear_velocity)
  return _internal_linear_velocity();
}
inline void GetMaxVelocityResponse::set_linear_velocity(double value) {
  _internal_set_linear_velocity(value);
  // @@protoc_insertion_point(field_set:controller.GetMaxVelocityResponse.linear_velocity)
}
inline double GetMaxVelocityResponse::_internal_linear_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linear_velocity_;
}
inline void GetMaxVelocityResponse::_internal_set_linear_velocity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linear_velocity_ = value;
}

// double angular_velocity = 2;
inline void GetMaxVelocityResponse::clear_angular_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.angular_velocity_ = 0;
}
inline double GetMaxVelocityResponse::angular_velocity() const {
  // @@protoc_insertion_point(field_get:controller.GetMaxVelocityResponse.angular_velocity)
  return _internal_angular_velocity();
}
inline void GetMaxVelocityResponse::set_angular_velocity(double value) {
  _internal_set_angular_velocity(value);
  // @@protoc_insertion_point(field_set:controller.GetMaxVelocityResponse.angular_velocity)
}
inline double GetMaxVelocityResponse::_internal_angular_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.angular_velocity_;
}
inline void GetMaxVelocityResponse::_internal_set_angular_velocity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.angular_velocity_ = value;
}

// -------------------------------------------------------------------

// SetMaxVelocityRequest

// double linear_velocity = 1;
inline void SetMaxVelocityRequest::clear_linear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linear_velocity_ = 0;
}
inline double SetMaxVelocityRequest::linear_velocity() const {
  // @@protoc_insertion_point(field_get:controller.SetMaxVelocityRequest.linear_velocity)
  return _internal_linear_velocity();
}
inline void SetMaxVelocityRequest::set_linear_velocity(double value) {
  _internal_set_linear_velocity(value);
  // @@protoc_insertion_point(field_set:controller.SetMaxVelocityRequest.linear_velocity)
}
inline double SetMaxVelocityRequest::_internal_linear_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linear_velocity_;
}
inline void SetMaxVelocityRequest::_internal_set_linear_velocity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linear_velocity_ = value;
}

// double angular_velocity = 2;
inline void SetMaxVelocityRequest::clear_angular_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.angular_velocity_ = 0;
}
inline double SetMaxVelocityRequest::angular_velocity() const {
  // @@protoc_insertion_point(field_get:controller.SetMaxVelocityRequest.angular_velocity)
  return _internal_angular_velocity();
}
inline void SetMaxVelocityRequest::set_angular_velocity(double value) {
  _internal_set_angular_velocity(value);
  // @@protoc_insertion_point(field_set:controller.SetMaxVelocityRequest.angular_velocity)
}
inline double SetMaxVelocityRequest::_internal_angular_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.angular_velocity_;
}
inline void SetMaxVelocityRequest::_internal_set_angular_velocity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.angular_velocity_ = value;
}

// -------------------------------------------------------------------

// SetMaxVelocityResponse

// bool success = 1;
inline void SetMaxVelocityResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool SetMaxVelocityResponse::success() const {
  // @@protoc_insertion_point(field_get:controller.SetMaxVelocityResponse.success)
  return _internal_success();
}
inline void SetMaxVelocityResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:controller.SetMaxVelocityResponse.success)
}
inline bool SetMaxVelocityResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void SetMaxVelocityResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace controller


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // chassis_5fservice_2eproto_2epb_2eh
