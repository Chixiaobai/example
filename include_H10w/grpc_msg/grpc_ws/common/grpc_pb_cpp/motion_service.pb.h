// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: motion_service.proto
// Protobuf C++ Version: 5.29.0

#ifndef motion_5fservice_2eproto_2epb_2eh
#define motion_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_motion_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_motion_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_motion_5fservice_2eproto;
namespace controller {
class ControlPolicyRequest;
struct ControlPolicyRequestDefaultTypeInternal;
extern ControlPolicyRequestDefaultTypeInternal _ControlPolicyRequest_default_instance_;
class ControlPolicyResponse;
struct ControlPolicyResponseDefaultTypeInternal;
extern ControlPolicyResponseDefaultTypeInternal _ControlPolicyResponse_default_instance_;
class EnableRealtimeRequest;
struct EnableRealtimeRequestDefaultTypeInternal;
extern EnableRealtimeRequestDefaultTypeInternal _EnableRealtimeRequest_default_instance_;
class EnableRealtimeResponse;
struct EnableRealtimeResponseDefaultTypeInternal;
extern EnableRealtimeResponseDefaultTypeInternal _EnableRealtimeResponse_default_instance_;
class JointAngle;
struct JointAngleDefaultTypeInternal;
extern JointAngleDefaultTypeInternal _JointAngle_default_instance_;
class JointMoveRequest;
struct JointMoveRequestDefaultTypeInternal;
extern JointMoveRequestDefaultTypeInternal _JointMoveRequest_default_instance_;
class JointMoveResponse;
struct JointMoveResponseDefaultTypeInternal;
extern JointMoveResponseDefaultTypeInternal _JointMoveResponse_default_instance_;
class LinearMove;
struct LinearMoveDefaultTypeInternal;
extern LinearMoveDefaultTypeInternal _LinearMove_default_instance_;
class LinearMoveRequest;
struct LinearMoveRequestDefaultTypeInternal;
extern LinearMoveRequestDefaultTypeInternal _LinearMoveRequest_default_instance_;
class LinearMoveResponse;
struct LinearMoveResponseDefaultTypeInternal;
extern LinearMoveResponseDefaultTypeInternal _LinearMoveResponse_default_instance_;
class MultiJointMoveRequest;
struct MultiJointMoveRequestDefaultTypeInternal;
extern MultiJointMoveRequestDefaultTypeInternal _MultiJointMoveRequest_default_instance_;
class MultiJointMoveResponse;
struct MultiJointMoveResponseDefaultTypeInternal;
extern MultiJointMoveResponseDefaultTypeInternal _MultiJointMoveResponse_default_instance_;
class StopResponse;
struct StopResponseDefaultTypeInternal;
extern StopResponseDefaultTypeInternal _StopResponse_default_instance_;
}  // namespace controller
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace controller {

// ===================================================================


// -------------------------------------------------------------------

class StopResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.StopResponse) */ {
 public:
  inline StopResponse() : StopResponse(nullptr) {}
  ~StopResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopResponse(const StopResponse& from) : StopResponse(nullptr, from) {}
  inline StopResponse(StopResponse&& from) noexcept
      : StopResponse(nullptr, std::move(from)) {}
  inline StopResponse& operator=(const StopResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopResponse& operator=(StopResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopResponse* internal_default_instance() {
    return reinterpret_cast<const StopResponse*>(
        &_StopResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(StopResponse& a, StopResponse& b) { a.Swap(&b); }
  inline void Swap(StopResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StopResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StopResponse& from) { StopResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StopResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.StopResponse"; }

 protected:
  explicit StopResponse(::google::protobuf::Arena* arena);
  StopResponse(::google::protobuf::Arena* arena, const StopResponse& from);
  StopResponse(::google::protobuf::Arena* arena, StopResponse&& from) noexcept
      : StopResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:controller.StopResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class MultiJointMoveResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.MultiJointMoveResponse) */ {
 public:
  inline MultiJointMoveResponse() : MultiJointMoveResponse(nullptr) {}
  ~MultiJointMoveResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MultiJointMoveResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MultiJointMoveResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MultiJointMoveResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MultiJointMoveResponse(const MultiJointMoveResponse& from) : MultiJointMoveResponse(nullptr, from) {}
  inline MultiJointMoveResponse(MultiJointMoveResponse&& from) noexcept
      : MultiJointMoveResponse(nullptr, std::move(from)) {}
  inline MultiJointMoveResponse& operator=(const MultiJointMoveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiJointMoveResponse& operator=(MultiJointMoveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MultiJointMoveResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MultiJointMoveResponse* internal_default_instance() {
    return reinterpret_cast<const MultiJointMoveResponse*>(
        &_MultiJointMoveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MultiJointMoveResponse& a, MultiJointMoveResponse& b) { a.Swap(&b); }
  inline void Swap(MultiJointMoveResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultiJointMoveResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MultiJointMoveResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MultiJointMoveResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MultiJointMoveResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MultiJointMoveResponse& from) { MultiJointMoveResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MultiJointMoveResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.MultiJointMoveResponse"; }

 protected:
  explicit MultiJointMoveResponse(::google::protobuf::Arena* arena);
  MultiJointMoveResponse(::google::protobuf::Arena* arena, const MultiJointMoveResponse& from);
  MultiJointMoveResponse(::google::protobuf::Arena* arena, MultiJointMoveResponse&& from) noexcept
      : MultiJointMoveResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
    kTokenFieldNumber = 2,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // uint32 token = 2;
  void clear_token() ;
  ::uint32_t token() const;
  void set_token(::uint32_t value);

  private:
  ::uint32_t _internal_token() const;
  void _internal_set_token(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:controller.MultiJointMoveResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MultiJointMoveResponse& from_msg);
    bool success_;
    ::uint32_t token_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class LinearMoveResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.LinearMoveResponse) */ {
 public:
  inline LinearMoveResponse() : LinearMoveResponse(nullptr) {}
  ~LinearMoveResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LinearMoveResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LinearMoveResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LinearMoveResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline LinearMoveResponse(const LinearMoveResponse& from) : LinearMoveResponse(nullptr, from) {}
  inline LinearMoveResponse(LinearMoveResponse&& from) noexcept
      : LinearMoveResponse(nullptr, std::move(from)) {}
  inline LinearMoveResponse& operator=(const LinearMoveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LinearMoveResponse& operator=(LinearMoveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LinearMoveResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LinearMoveResponse* internal_default_instance() {
    return reinterpret_cast<const LinearMoveResponse*>(
        &_LinearMoveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(LinearMoveResponse& a, LinearMoveResponse& b) { a.Swap(&b); }
  inline void Swap(LinearMoveResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LinearMoveResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LinearMoveResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LinearMoveResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LinearMoveResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LinearMoveResponse& from) { LinearMoveResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LinearMoveResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.LinearMoveResponse"; }

 protected:
  explicit LinearMoveResponse(::google::protobuf::Arena* arena);
  LinearMoveResponse(::google::protobuf::Arena* arena, const LinearMoveResponse& from);
  LinearMoveResponse(::google::protobuf::Arena* arena, LinearMoveResponse&& from) noexcept
      : LinearMoveResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
    kTaskIdFieldNumber = 2,
  };
  // int32 result = 1;
  void clear_result() ;
  ::int32_t result() const;
  void set_result(::int32_t value);

  private:
  ::int32_t _internal_result() const;
  void _internal_set_result(::int32_t value);

  public:
  // int32 task_id = 2;
  void clear_task_id() ;
  ::int32_t task_id() const;
  void set_task_id(::int32_t value);

  private:
  ::int32_t _internal_task_id() const;
  void _internal_set_task_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:controller.LinearMoveResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LinearMoveResponse& from_msg);
    ::int32_t result_;
    ::int32_t task_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class LinearMove final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.LinearMove) */ {
 public:
  inline LinearMove() : LinearMove(nullptr) {}
  ~LinearMove() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LinearMove* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LinearMove));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LinearMove(
      ::google::protobuf::internal::ConstantInitialized);

  inline LinearMove(const LinearMove& from) : LinearMove(nullptr, from) {}
  inline LinearMove(LinearMove&& from) noexcept
      : LinearMove(nullptr, std::move(from)) {}
  inline LinearMove& operator=(const LinearMove& from) {
    CopyFrom(from);
    return *this;
  }
  inline LinearMove& operator=(LinearMove&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LinearMove& default_instance() {
    return *internal_default_instance();
  }
  static inline const LinearMove* internal_default_instance() {
    return reinterpret_cast<const LinearMove*>(
        &_LinearMove_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(LinearMove& a, LinearMove& b) { a.Swap(&b); }
  inline void Swap(LinearMove* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LinearMove* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LinearMove* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LinearMove>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LinearMove& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LinearMove& from) { LinearMove::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LinearMove* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.LinearMove"; }

 protected:
  explicit LinearMove(::google::protobuf::Arena* arena);
  LinearMove(::google::protobuf::Arena* arena, const LinearMove& from);
  LinearMove(::google::protobuf::Arena* arena, LinearMove&& from) noexcept
      : LinearMove(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPoseFieldNumber = 2,
    kVelocityPercentFieldNumber = 3,
    kAccelerationPercentFieldNumber = 4,
    kTypeFieldNumber = 1,
  };
  // repeated double pose = 2;
  int pose_size() const;
  private:
  int _internal_pose_size() const;

  public:
  void clear_pose() ;
  double pose(int index) const;
  void set_pose(int index, double value);
  void add_pose(double value);
  const ::google::protobuf::RepeatedField<double>& pose() const;
  ::google::protobuf::RepeatedField<double>* mutable_pose();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_pose() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_pose();

  public:
  // double velocity_percent = 3;
  void clear_velocity_percent() ;
  double velocity_percent() const;
  void set_velocity_percent(double value);

  private:
  double _internal_velocity_percent() const;
  void _internal_set_velocity_percent(double value);

  public:
  // double acceleration_percent = 4;
  void clear_acceleration_percent() ;
  double acceleration_percent() const;
  void set_acceleration_percent(double value);

  private:
  double _internal_acceleration_percent() const;
  void _internal_set_acceleration_percent(double value);

  public:
  // int32 type = 1;
  void clear_type() ;
  ::int32_t type() const;
  void set_type(::int32_t value);

  private:
  ::int32_t _internal_type() const;
  void _internal_set_type(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:controller.LinearMove)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LinearMove& from_msg);
    ::google::protobuf::RepeatedField<double> pose_;
    double velocity_percent_;
    double acceleration_percent_;
    ::int32_t type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class JointMoveResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.JointMoveResponse) */ {
 public:
  inline JointMoveResponse() : JointMoveResponse(nullptr) {}
  ~JointMoveResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JointMoveResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JointMoveResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JointMoveResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline JointMoveResponse(const JointMoveResponse& from) : JointMoveResponse(nullptr, from) {}
  inline JointMoveResponse(JointMoveResponse&& from) noexcept
      : JointMoveResponse(nullptr, std::move(from)) {}
  inline JointMoveResponse& operator=(const JointMoveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline JointMoveResponse& operator=(JointMoveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JointMoveResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const JointMoveResponse* internal_default_instance() {
    return reinterpret_cast<const JointMoveResponse*>(
        &_JointMoveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(JointMoveResponse& a, JointMoveResponse& b) { a.Swap(&b); }
  inline void Swap(JointMoveResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JointMoveResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JointMoveResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JointMoveResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JointMoveResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JointMoveResponse& from) { JointMoveResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JointMoveResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.JointMoveResponse"; }

 protected:
  explicit JointMoveResponse(::google::protobuf::Arena* arena);
  JointMoveResponse(::google::protobuf::Arena* arena, const JointMoveResponse& from);
  JointMoveResponse(::google::protobuf::Arena* arena, JointMoveResponse&& from) noexcept
      : JointMoveResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
    kTokenFieldNumber = 2,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // uint32 token = 2;
  void clear_token() ;
  ::uint32_t token() const;
  void set_token(::uint32_t value);

  private:
  ::uint32_t _internal_token() const;
  void _internal_set_token(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:controller.JointMoveResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JointMoveResponse& from_msg);
    bool success_;
    ::uint32_t token_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class JointMoveRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.JointMoveRequest) */ {
 public:
  inline JointMoveRequest() : JointMoveRequest(nullptr) {}
  ~JointMoveRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JointMoveRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JointMoveRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JointMoveRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline JointMoveRequest(const JointMoveRequest& from) : JointMoveRequest(nullptr, from) {}
  inline JointMoveRequest(JointMoveRequest&& from) noexcept
      : JointMoveRequest(nullptr, std::move(from)) {}
  inline JointMoveRequest& operator=(const JointMoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline JointMoveRequest& operator=(JointMoveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JointMoveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const JointMoveRequest* internal_default_instance() {
    return reinterpret_cast<const JointMoveRequest*>(
        &_JointMoveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(JointMoveRequest& a, JointMoveRequest& b) { a.Swap(&b); }
  inline void Swap(JointMoveRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JointMoveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JointMoveRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JointMoveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JointMoveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JointMoveRequest& from) { JointMoveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JointMoveRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.JointMoveRequest"; }

 protected:
  explicit JointMoveRequest(::google::protobuf::Arena* arena);
  JointMoveRequest(::google::protobuf::Arena* arena, const JointMoveRequest& from);
  JointMoveRequest(::google::protobuf::Arena* arena, JointMoveRequest&& from) noexcept
      : JointMoveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetPositionFieldNumber = 2,
    kVelocityFieldNumber = 3,
    kJointIndexFieldNumber = 1,
  };
  // double target_position = 2;
  void clear_target_position() ;
  double target_position() const;
  void set_target_position(double value);

  private:
  double _internal_target_position() const;
  void _internal_set_target_position(double value);

  public:
  // double velocity = 3;
  void clear_velocity() ;
  double velocity() const;
  void set_velocity(double value);

  private:
  double _internal_velocity() const;
  void _internal_set_velocity(double value);

  public:
  // uint32 joint_index = 1;
  void clear_joint_index() ;
  ::uint32_t joint_index() const;
  void set_joint_index(::uint32_t value);

  private:
  ::uint32_t _internal_joint_index() const;
  void _internal_set_joint_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:controller.JointMoveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JointMoveRequest& from_msg);
    double target_position_;
    double velocity_;
    ::uint32_t joint_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class JointAngle final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.JointAngle) */ {
 public:
  inline JointAngle() : JointAngle(nullptr) {}
  ~JointAngle() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JointAngle* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JointAngle));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JointAngle(
      ::google::protobuf::internal::ConstantInitialized);

  inline JointAngle(const JointAngle& from) : JointAngle(nullptr, from) {}
  inline JointAngle(JointAngle&& from) noexcept
      : JointAngle(nullptr, std::move(from)) {}
  inline JointAngle& operator=(const JointAngle& from) {
    CopyFrom(from);
    return *this;
  }
  inline JointAngle& operator=(JointAngle&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JointAngle& default_instance() {
    return *internal_default_instance();
  }
  static inline const JointAngle* internal_default_instance() {
    return reinterpret_cast<const JointAngle*>(
        &_JointAngle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(JointAngle& a, JointAngle& b) { a.Swap(&b); }
  inline void Swap(JointAngle* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JointAngle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JointAngle* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JointAngle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JointAngle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JointAngle& from) { JointAngle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JointAngle* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.JointAngle"; }

 protected:
  explicit JointAngle(::google::protobuf::Arena* arena);
  JointAngle(::google::protobuf::Arena* arena, const JointAngle& from);
  JointAngle(::google::protobuf::Arena* arena, JointAngle&& from) noexcept
      : JointAngle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetPositionFieldNumber = 2,
    kVelocityFieldNumber = 3,
    kJointIndexFieldNumber = 1,
  };
  // double target_position = 2;
  void clear_target_position() ;
  double target_position() const;
  void set_target_position(double value);

  private:
  double _internal_target_position() const;
  void _internal_set_target_position(double value);

  public:
  // double velocity = 3;
  void clear_velocity() ;
  double velocity() const;
  void set_velocity(double value);

  private:
  double _internal_velocity() const;
  void _internal_set_velocity(double value);

  public:
  // uint32 joint_index = 1;
  void clear_joint_index() ;
  ::uint32_t joint_index() const;
  void set_joint_index(::uint32_t value);

  private:
  ::uint32_t _internal_joint_index() const;
  void _internal_set_joint_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:controller.JointAngle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JointAngle& from_msg);
    double target_position_;
    double velocity_;
    ::uint32_t joint_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class EnableRealtimeResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.EnableRealtimeResponse) */ {
 public:
  inline EnableRealtimeResponse() : EnableRealtimeResponse(nullptr) {}
  ~EnableRealtimeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EnableRealtimeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EnableRealtimeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnableRealtimeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnableRealtimeResponse(const EnableRealtimeResponse& from) : EnableRealtimeResponse(nullptr, from) {}
  inline EnableRealtimeResponse(EnableRealtimeResponse&& from) noexcept
      : EnableRealtimeResponse(nullptr, std::move(from)) {}
  inline EnableRealtimeResponse& operator=(const EnableRealtimeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnableRealtimeResponse& operator=(EnableRealtimeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnableRealtimeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnableRealtimeResponse* internal_default_instance() {
    return reinterpret_cast<const EnableRealtimeResponse*>(
        &_EnableRealtimeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(EnableRealtimeResponse& a, EnableRealtimeResponse& b) { a.Swap(&b); }
  inline void Swap(EnableRealtimeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnableRealtimeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnableRealtimeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EnableRealtimeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnableRealtimeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnableRealtimeResponse& from) { EnableRealtimeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EnableRealtimeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.EnableRealtimeResponse"; }

 protected:
  explicit EnableRealtimeResponse(::google::protobuf::Arena* arena);
  EnableRealtimeResponse(::google::protobuf::Arena* arena, const EnableRealtimeResponse& from);
  EnableRealtimeResponse(::google::protobuf::Arena* arena, EnableRealtimeResponse&& from) noexcept
      : EnableRealtimeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:controller.EnableRealtimeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnableRealtimeResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class EnableRealtimeRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.EnableRealtimeRequest) */ {
 public:
  inline EnableRealtimeRequest() : EnableRealtimeRequest(nullptr) {}
  ~EnableRealtimeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EnableRealtimeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EnableRealtimeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnableRealtimeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnableRealtimeRequest(const EnableRealtimeRequest& from) : EnableRealtimeRequest(nullptr, from) {}
  inline EnableRealtimeRequest(EnableRealtimeRequest&& from) noexcept
      : EnableRealtimeRequest(nullptr, std::move(from)) {}
  inline EnableRealtimeRequest& operator=(const EnableRealtimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnableRealtimeRequest& operator=(EnableRealtimeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnableRealtimeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnableRealtimeRequest* internal_default_instance() {
    return reinterpret_cast<const EnableRealtimeRequest*>(
        &_EnableRealtimeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(EnableRealtimeRequest& a, EnableRealtimeRequest& b) { a.Swap(&b); }
  inline void Swap(EnableRealtimeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnableRealtimeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnableRealtimeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EnableRealtimeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnableRealtimeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnableRealtimeRequest& from) { EnableRealtimeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EnableRealtimeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.EnableRealtimeRequest"; }

 protected:
  explicit EnableRealtimeRequest(::google::protobuf::Arena* arena);
  EnableRealtimeRequest(::google::protobuf::Arena* arena, const EnableRealtimeRequest& from);
  EnableRealtimeRequest(::google::protobuf::Arena* arena, EnableRealtimeRequest&& from) noexcept
      : EnableRealtimeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnableFieldNumber = 1,
  };
  // bool enable = 1;
  void clear_enable() ;
  bool enable() const;
  void set_enable(bool value);

  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);

  public:
  // @@protoc_insertion_point(class_scope:controller.EnableRealtimeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnableRealtimeRequest& from_msg);
    bool enable_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ControlPolicyResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.ControlPolicyResponse) */ {
 public:
  inline ControlPolicyResponse() : ControlPolicyResponse(nullptr) {}
  ~ControlPolicyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ControlPolicyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ControlPolicyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ControlPolicyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ControlPolicyResponse(const ControlPolicyResponse& from) : ControlPolicyResponse(nullptr, from) {}
  inline ControlPolicyResponse(ControlPolicyResponse&& from) noexcept
      : ControlPolicyResponse(nullptr, std::move(from)) {}
  inline ControlPolicyResponse& operator=(const ControlPolicyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ControlPolicyResponse& operator=(ControlPolicyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ControlPolicyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ControlPolicyResponse* internal_default_instance() {
    return reinterpret_cast<const ControlPolicyResponse*>(
        &_ControlPolicyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ControlPolicyResponse& a, ControlPolicyResponse& b) { a.Swap(&b); }
  inline void Swap(ControlPolicyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ControlPolicyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ControlPolicyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ControlPolicyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ControlPolicyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ControlPolicyResponse& from) { ControlPolicyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ControlPolicyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.ControlPolicyResponse"; }

 protected:
  explicit ControlPolicyResponse(::google::protobuf::Arena* arena);
  ControlPolicyResponse(::google::protobuf::Arena* arena, const ControlPolicyResponse& from);
  ControlPolicyResponse(::google::protobuf::Arena* arena, ControlPolicyResponse&& from) noexcept
      : ControlPolicyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:controller.ControlPolicyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ControlPolicyResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ControlPolicyRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.ControlPolicyRequest) */ {
 public:
  inline ControlPolicyRequest() : ControlPolicyRequest(nullptr) {}
  ~ControlPolicyRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ControlPolicyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ControlPolicyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ControlPolicyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ControlPolicyRequest(const ControlPolicyRequest& from) : ControlPolicyRequest(nullptr, from) {}
  inline ControlPolicyRequest(ControlPolicyRequest&& from) noexcept
      : ControlPolicyRequest(nullptr, std::move(from)) {}
  inline ControlPolicyRequest& operator=(const ControlPolicyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ControlPolicyRequest& operator=(ControlPolicyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ControlPolicyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ControlPolicyRequest* internal_default_instance() {
    return reinterpret_cast<const ControlPolicyRequest*>(
        &_ControlPolicyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(ControlPolicyRequest& a, ControlPolicyRequest& b) { a.Swap(&b); }
  inline void Swap(ControlPolicyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ControlPolicyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ControlPolicyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ControlPolicyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ControlPolicyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ControlPolicyRequest& from) { ControlPolicyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ControlPolicyRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.ControlPolicyRequest"; }

 protected:
  explicit ControlPolicyRequest(::google::protobuf::Arena* arena);
  ControlPolicyRequest(::google::protobuf::Arena* arena, const ControlPolicyRequest& from);
  ControlPolicyRequest(::google::protobuf::Arena* arena, ControlPolicyRequest&& from) noexcept
      : ControlPolicyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPolicyFieldNumber = 1,
  };
  // int32 policy = 1;
  void clear_policy() ;
  ::int32_t policy() const;
  void set_policy(::int32_t value);

  private:
  ::int32_t _internal_policy() const;
  void _internal_set_policy(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:controller.ControlPolicyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ControlPolicyRequest& from_msg);
    ::int32_t policy_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class MultiJointMoveRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.MultiJointMoveRequest) */ {
 public:
  inline MultiJointMoveRequest() : MultiJointMoveRequest(nullptr) {}
  ~MultiJointMoveRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MultiJointMoveRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MultiJointMoveRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MultiJointMoveRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline MultiJointMoveRequest(const MultiJointMoveRequest& from) : MultiJointMoveRequest(nullptr, from) {}
  inline MultiJointMoveRequest(MultiJointMoveRequest&& from) noexcept
      : MultiJointMoveRequest(nullptr, std::move(from)) {}
  inline MultiJointMoveRequest& operator=(const MultiJointMoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiJointMoveRequest& operator=(MultiJointMoveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MultiJointMoveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MultiJointMoveRequest* internal_default_instance() {
    return reinterpret_cast<const MultiJointMoveRequest*>(
        &_MultiJointMoveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MultiJointMoveRequest& a, MultiJointMoveRequest& b) { a.Swap(&b); }
  inline void Swap(MultiJointMoveRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultiJointMoveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MultiJointMoveRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MultiJointMoveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MultiJointMoveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MultiJointMoveRequest& from) { MultiJointMoveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MultiJointMoveRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.MultiJointMoveRequest"; }

 protected:
  explicit MultiJointMoveRequest(::google::protobuf::Arena* arena);
  MultiJointMoveRequest(::google::protobuf::Arena* arena, const MultiJointMoveRequest& from);
  MultiJointMoveRequest(::google::protobuf::Arena* arena, MultiJointMoveRequest&& from) noexcept
      : MultiJointMoveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kJointAnglesFieldNumber = 1,
  };
  // repeated .controller.JointAngle joint_angles = 1;
  int joint_angles_size() const;
  private:
  int _internal_joint_angles_size() const;

  public:
  void clear_joint_angles() ;
  ::controller::JointAngle* mutable_joint_angles(int index);
  ::google::protobuf::RepeatedPtrField<::controller::JointAngle>* mutable_joint_angles();

  private:
  const ::google::protobuf::RepeatedPtrField<::controller::JointAngle>& _internal_joint_angles() const;
  ::google::protobuf::RepeatedPtrField<::controller::JointAngle>* _internal_mutable_joint_angles();
  public:
  const ::controller::JointAngle& joint_angles(int index) const;
  ::controller::JointAngle* add_joint_angles();
  const ::google::protobuf::RepeatedPtrField<::controller::JointAngle>& joint_angles() const;
  // @@protoc_insertion_point(class_scope:controller.MultiJointMoveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MultiJointMoveRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::controller::JointAngle > joint_angles_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};
// -------------------------------------------------------------------

class LinearMoveRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:controller.LinearMoveRequest) */ {
 public:
  inline LinearMoveRequest() : LinearMoveRequest(nullptr) {}
  ~LinearMoveRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LinearMoveRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LinearMoveRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LinearMoveRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LinearMoveRequest(const LinearMoveRequest& from) : LinearMoveRequest(nullptr, from) {}
  inline LinearMoveRequest(LinearMoveRequest&& from) noexcept
      : LinearMoveRequest(nullptr, std::move(from)) {}
  inline LinearMoveRequest& operator=(const LinearMoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LinearMoveRequest& operator=(LinearMoveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LinearMoveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LinearMoveRequest* internal_default_instance() {
    return reinterpret_cast<const LinearMoveRequest*>(
        &_LinearMoveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(LinearMoveRequest& a, LinearMoveRequest& b) { a.Swap(&b); }
  inline void Swap(LinearMoveRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LinearMoveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LinearMoveRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LinearMoveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LinearMoveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LinearMoveRequest& from) { LinearMoveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LinearMoveRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "controller.LinearMoveRequest"; }

 protected:
  explicit LinearMoveRequest(::google::protobuf::Arena* arena);
  LinearMoveRequest(::google::protobuf::Arena* arena, const LinearMoveRequest& from);
  LinearMoveRequest(::google::protobuf::Arena* arena, LinearMoveRequest&& from) noexcept
      : LinearMoveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLinearMoveFieldNumber = 1,
  };
  // repeated .controller.LinearMove linear_move = 1;
  int linear_move_size() const;
  private:
  int _internal_linear_move_size() const;

  public:
  void clear_linear_move() ;
  ::controller::LinearMove* mutable_linear_move(int index);
  ::google::protobuf::RepeatedPtrField<::controller::LinearMove>* mutable_linear_move();

  private:
  const ::google::protobuf::RepeatedPtrField<::controller::LinearMove>& _internal_linear_move() const;
  ::google::protobuf::RepeatedPtrField<::controller::LinearMove>* _internal_mutable_linear_move();
  public:
  const ::controller::LinearMove& linear_move(int index) const;
  ::controller::LinearMove* add_linear_move();
  const ::google::protobuf::RepeatedPtrField<::controller::LinearMove>& linear_move() const;
  // @@protoc_insertion_point(class_scope:controller.LinearMoveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LinearMoveRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::controller::LinearMove > linear_move_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_motion_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// JointMoveRequest

// uint32 joint_index = 1;
inline void JointMoveRequest::clear_joint_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_ = 0u;
}
inline ::uint32_t JointMoveRequest::joint_index() const {
  // @@protoc_insertion_point(field_get:controller.JointMoveRequest.joint_index)
  return _internal_joint_index();
}
inline void JointMoveRequest::set_joint_index(::uint32_t value) {
  _internal_set_joint_index(value);
  // @@protoc_insertion_point(field_set:controller.JointMoveRequest.joint_index)
}
inline ::uint32_t JointMoveRequest::_internal_joint_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.joint_index_;
}
inline void JointMoveRequest::_internal_set_joint_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_ = value;
}

// double target_position = 2;
inline void JointMoveRequest::clear_target_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_position_ = 0;
}
inline double JointMoveRequest::target_position() const {
  // @@protoc_insertion_point(field_get:controller.JointMoveRequest.target_position)
  return _internal_target_position();
}
inline void JointMoveRequest::set_target_position(double value) {
  _internal_set_target_position(value);
  // @@protoc_insertion_point(field_set:controller.JointMoveRequest.target_position)
}
inline double JointMoveRequest::_internal_target_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_position_;
}
inline void JointMoveRequest::_internal_set_target_position(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_position_ = value;
}

// double velocity = 3;
inline void JointMoveRequest::clear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_ = 0;
}
inline double JointMoveRequest::velocity() const {
  // @@protoc_insertion_point(field_get:controller.JointMoveRequest.velocity)
  return _internal_velocity();
}
inline void JointMoveRequest::set_velocity(double value) {
  _internal_set_velocity(value);
  // @@protoc_insertion_point(field_set:controller.JointMoveRequest.velocity)
}
inline double JointMoveRequest::_internal_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.velocity_;
}
inline void JointMoveRequest::_internal_set_velocity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_ = value;
}

// -------------------------------------------------------------------

// JointMoveResponse

// bool success = 1;
inline void JointMoveResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool JointMoveResponse::success() const {
  // @@protoc_insertion_point(field_get:controller.JointMoveResponse.success)
  return _internal_success();
}
inline void JointMoveResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:controller.JointMoveResponse.success)
}
inline bool JointMoveResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void JointMoveResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// uint32 token = 2;
inline void JointMoveResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_ = 0u;
}
inline ::uint32_t JointMoveResponse::token() const {
  // @@protoc_insertion_point(field_get:controller.JointMoveResponse.token)
  return _internal_token();
}
inline void JointMoveResponse::set_token(::uint32_t value) {
  _internal_set_token(value);
  // @@protoc_insertion_point(field_set:controller.JointMoveResponse.token)
}
inline ::uint32_t JointMoveResponse::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_;
}
inline void JointMoveResponse::_internal_set_token(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_ = value;
}

// -------------------------------------------------------------------

// JointAngle

// uint32 joint_index = 1;
inline void JointAngle::clear_joint_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_ = 0u;
}
inline ::uint32_t JointAngle::joint_index() const {
  // @@protoc_insertion_point(field_get:controller.JointAngle.joint_index)
  return _internal_joint_index();
}
inline void JointAngle::set_joint_index(::uint32_t value) {
  _internal_set_joint_index(value);
  // @@protoc_insertion_point(field_set:controller.JointAngle.joint_index)
}
inline ::uint32_t JointAngle::_internal_joint_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.joint_index_;
}
inline void JointAngle::_internal_set_joint_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_index_ = value;
}

// double target_position = 2;
inline void JointAngle::clear_target_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_position_ = 0;
}
inline double JointAngle::target_position() const {
  // @@protoc_insertion_point(field_get:controller.JointAngle.target_position)
  return _internal_target_position();
}
inline void JointAngle::set_target_position(double value) {
  _internal_set_target_position(value);
  // @@protoc_insertion_point(field_set:controller.JointAngle.target_position)
}
inline double JointAngle::_internal_target_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_position_;
}
inline void JointAngle::_internal_set_target_position(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_position_ = value;
}

// double velocity = 3;
inline void JointAngle::clear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_ = 0;
}
inline double JointAngle::velocity() const {
  // @@protoc_insertion_point(field_get:controller.JointAngle.velocity)
  return _internal_velocity();
}
inline void JointAngle::set_velocity(double value) {
  _internal_set_velocity(value);
  // @@protoc_insertion_point(field_set:controller.JointAngle.velocity)
}
inline double JointAngle::_internal_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.velocity_;
}
inline void JointAngle::_internal_set_velocity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_ = value;
}

// -------------------------------------------------------------------

// MultiJointMoveRequest

// repeated .controller.JointAngle joint_angles = 1;
inline int MultiJointMoveRequest::_internal_joint_angles_size() const {
  return _internal_joint_angles().size();
}
inline int MultiJointMoveRequest::joint_angles_size() const {
  return _internal_joint_angles_size();
}
inline void MultiJointMoveRequest::clear_joint_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.joint_angles_.Clear();
}
inline ::controller::JointAngle* MultiJointMoveRequest::mutable_joint_angles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:controller.MultiJointMoveRequest.joint_angles)
  return _internal_mutable_joint_angles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::controller::JointAngle>* MultiJointMoveRequest::mutable_joint_angles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:controller.MultiJointMoveRequest.joint_angles)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_joint_angles();
}
inline const ::controller::JointAngle& MultiJointMoveRequest::joint_angles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:controller.MultiJointMoveRequest.joint_angles)
  return _internal_joint_angles().Get(index);
}
inline ::controller::JointAngle* MultiJointMoveRequest::add_joint_angles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::controller::JointAngle* _add = _internal_mutable_joint_angles()->Add();
  // @@protoc_insertion_point(field_add:controller.MultiJointMoveRequest.joint_angles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::controller::JointAngle>& MultiJointMoveRequest::joint_angles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:controller.MultiJointMoveRequest.joint_angles)
  return _internal_joint_angles();
}
inline const ::google::protobuf::RepeatedPtrField<::controller::JointAngle>&
MultiJointMoveRequest::_internal_joint_angles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.joint_angles_;
}
inline ::google::protobuf::RepeatedPtrField<::controller::JointAngle>*
MultiJointMoveRequest::_internal_mutable_joint_angles() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.joint_angles_;
}

// -------------------------------------------------------------------

// MultiJointMoveResponse

// bool success = 1;
inline void MultiJointMoveResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool MultiJointMoveResponse::success() const {
  // @@protoc_insertion_point(field_get:controller.MultiJointMoveResponse.success)
  return _internal_success();
}
inline void MultiJointMoveResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:controller.MultiJointMoveResponse.success)
}
inline bool MultiJointMoveResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void MultiJointMoveResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// uint32 token = 2;
inline void MultiJointMoveResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_ = 0u;
}
inline ::uint32_t MultiJointMoveResponse::token() const {
  // @@protoc_insertion_point(field_get:controller.MultiJointMoveResponse.token)
  return _internal_token();
}
inline void MultiJointMoveResponse::set_token(::uint32_t value) {
  _internal_set_token(value);
  // @@protoc_insertion_point(field_set:controller.MultiJointMoveResponse.token)
}
inline ::uint32_t MultiJointMoveResponse::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_;
}
inline void MultiJointMoveResponse::_internal_set_token(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_ = value;
}

// -------------------------------------------------------------------

// LinearMove

// int32 type = 1;
inline void LinearMove::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::int32_t LinearMove::type() const {
  // @@protoc_insertion_point(field_get:controller.LinearMove.type)
  return _internal_type();
}
inline void LinearMove::set_type(::int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:controller.LinearMove.type)
}
inline ::int32_t LinearMove::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_;
}
inline void LinearMove::_internal_set_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// repeated double pose = 2;
inline int LinearMove::_internal_pose_size() const {
  return _internal_pose().size();
}
inline int LinearMove::pose_size() const {
  return _internal_pose_size();
}
inline void LinearMove::clear_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pose_.Clear();
}
inline double LinearMove::pose(int index) const {
  // @@protoc_insertion_point(field_get:controller.LinearMove.pose)
  return _internal_pose().Get(index);
}
inline void LinearMove::set_pose(int index, double value) {
  _internal_mutable_pose()->Set(index, value);
  // @@protoc_insertion_point(field_set:controller.LinearMove.pose)
}
inline void LinearMove::add_pose(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pose()->Add(value);
  // @@protoc_insertion_point(field_add:controller.LinearMove.pose)
}
inline const ::google::protobuf::RepeatedField<double>& LinearMove::pose() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:controller.LinearMove.pose)
  return _internal_pose();
}
inline ::google::protobuf::RepeatedField<double>* LinearMove::mutable_pose()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:controller.LinearMove.pose)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pose();
}
inline const ::google::protobuf::RepeatedField<double>&
LinearMove::_internal_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pose_;
}
inline ::google::protobuf::RepeatedField<double>* LinearMove::_internal_mutable_pose() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pose_;
}

// double velocity_percent = 3;
inline void LinearMove::clear_velocity_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_percent_ = 0;
}
inline double LinearMove::velocity_percent() const {
  // @@protoc_insertion_point(field_get:controller.LinearMove.velocity_percent)
  return _internal_velocity_percent();
}
inline void LinearMove::set_velocity_percent(double value) {
  _internal_set_velocity_percent(value);
  // @@protoc_insertion_point(field_set:controller.LinearMove.velocity_percent)
}
inline double LinearMove::_internal_velocity_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.velocity_percent_;
}
inline void LinearMove::_internal_set_velocity_percent(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_percent_ = value;
}

// double acceleration_percent = 4;
inline void LinearMove::clear_acceleration_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acceleration_percent_ = 0;
}
inline double LinearMove::acceleration_percent() const {
  // @@protoc_insertion_point(field_get:controller.LinearMove.acceleration_percent)
  return _internal_acceleration_percent();
}
inline void LinearMove::set_acceleration_percent(double value) {
  _internal_set_acceleration_percent(value);
  // @@protoc_insertion_point(field_set:controller.LinearMove.acceleration_percent)
}
inline double LinearMove::_internal_acceleration_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.acceleration_percent_;
}
inline void LinearMove::_internal_set_acceleration_percent(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acceleration_percent_ = value;
}

// -------------------------------------------------------------------

// LinearMoveRequest

// repeated .controller.LinearMove linear_move = 1;
inline int LinearMoveRequest::_internal_linear_move_size() const {
  return _internal_linear_move().size();
}
inline int LinearMoveRequest::linear_move_size() const {
  return _internal_linear_move_size();
}
inline void LinearMoveRequest::clear_linear_move() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linear_move_.Clear();
}
inline ::controller::LinearMove* LinearMoveRequest::mutable_linear_move(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:controller.LinearMoveRequest.linear_move)
  return _internal_mutable_linear_move()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::controller::LinearMove>* LinearMoveRequest::mutable_linear_move()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:controller.LinearMoveRequest.linear_move)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_linear_move();
}
inline const ::controller::LinearMove& LinearMoveRequest::linear_move(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:controller.LinearMoveRequest.linear_move)
  return _internal_linear_move().Get(index);
}
inline ::controller::LinearMove* LinearMoveRequest::add_linear_move() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::controller::LinearMove* _add = _internal_mutable_linear_move()->Add();
  // @@protoc_insertion_point(field_add:controller.LinearMoveRequest.linear_move)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::controller::LinearMove>& LinearMoveRequest::linear_move() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:controller.LinearMoveRequest.linear_move)
  return _internal_linear_move();
}
inline const ::google::protobuf::RepeatedPtrField<::controller::LinearMove>&
LinearMoveRequest::_internal_linear_move() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linear_move_;
}
inline ::google::protobuf::RepeatedPtrField<::controller::LinearMove>*
LinearMoveRequest::_internal_mutable_linear_move() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.linear_move_;
}

// -------------------------------------------------------------------

// LinearMoveResponse

// int32 result = 1;
inline void LinearMoveResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::int32_t LinearMoveResponse::result() const {
  // @@protoc_insertion_point(field_get:controller.LinearMoveResponse.result)
  return _internal_result();
}
inline void LinearMoveResponse::set_result(::int32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:controller.LinearMoveResponse.result)
}
inline ::int32_t LinearMoveResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void LinearMoveResponse::_internal_set_result(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// int32 task_id = 2;
inline void LinearMoveResponse::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = 0;
}
inline ::int32_t LinearMoveResponse::task_id() const {
  // @@protoc_insertion_point(field_get:controller.LinearMoveResponse.task_id)
  return _internal_task_id();
}
inline void LinearMoveResponse::set_task_id(::int32_t value) {
  _internal_set_task_id(value);
  // @@protoc_insertion_point(field_set:controller.LinearMoveResponse.task_id)
}
inline ::int32_t LinearMoveResponse::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_;
}
inline void LinearMoveResponse::_internal_set_task_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = value;
}

// -------------------------------------------------------------------

// StopResponse

// bool success = 1;
inline void StopResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool StopResponse::success() const {
  // @@protoc_insertion_point(field_get:controller.StopResponse.success)
  return _internal_success();
}
inline void StopResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:controller.StopResponse.success)
}
inline bool StopResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void StopResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// EnableRealtimeRequest

// bool enable = 1;
inline void EnableRealtimeRequest::clear_enable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_ = false;
}
inline bool EnableRealtimeRequest::enable() const {
  // @@protoc_insertion_point(field_get:controller.EnableRealtimeRequest.enable)
  return _internal_enable();
}
inline void EnableRealtimeRequest::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:controller.EnableRealtimeRequest.enable)
}
inline bool EnableRealtimeRequest::_internal_enable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_;
}
inline void EnableRealtimeRequest::_internal_set_enable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_ = value;
}

// -------------------------------------------------------------------

// EnableRealtimeResponse

// bool success = 1;
inline void EnableRealtimeResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool EnableRealtimeResponse::success() const {
  // @@protoc_insertion_point(field_get:controller.EnableRealtimeResponse.success)
  return _internal_success();
}
inline void EnableRealtimeResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:controller.EnableRealtimeResponse.success)
}
inline bool EnableRealtimeResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void EnableRealtimeResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// ControlPolicyRequest

// int32 policy = 1;
inline void ControlPolicyRequest::clear_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policy_ = 0;
}
inline ::int32_t ControlPolicyRequest::policy() const {
  // @@protoc_insertion_point(field_get:controller.ControlPolicyRequest.policy)
  return _internal_policy();
}
inline void ControlPolicyRequest::set_policy(::int32_t value) {
  _internal_set_policy(value);
  // @@protoc_insertion_point(field_set:controller.ControlPolicyRequest.policy)
}
inline ::int32_t ControlPolicyRequest::_internal_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.policy_;
}
inline void ControlPolicyRequest::_internal_set_policy(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.policy_ = value;
}

// -------------------------------------------------------------------

// ControlPolicyResponse

// bool success = 1;
inline void ControlPolicyResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool ControlPolicyResponse::success() const {
  // @@protoc_insertion_point(field_get:controller.ControlPolicyResponse.success)
  return _internal_success();
}
inline void ControlPolicyResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:controller.ControlPolicyResponse.success)
}
inline bool ControlPolicyResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void ControlPolicyResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace controller


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // motion_5fservice_2eproto_2epb_2eh
